{"version":3,"file":"bundle.js","sources":["coordinates.js","polygoncontrol.js","booleanopcontrol.js","../../dist/martinez.umd.js","index.js"],"sourcesContent":["import L from 'leaflet';\n\nL.Coordinates = L.Control.extend({\n  options: {\n    position: 'bottomright'\n  },\n\n  onAdd: function(map) {\n    this._container = L.DomUtil.create('div', 'leaflet-bar');\n    this._container.style.background = '#ffffff';\n    map.on('mousemove', this._onMouseMove, this);\n    return this._container;\n  },\n\n  _onMouseMove: function(e) {\n    this._container.innerHTML = '<span style=\"padding: 5px\">' +\n      e.latlng.lng.toFixed(3) + ', ' + e.latlng.lat.toFixed(3) + '</span>';\n  }\n\n});\n","import L from 'leaflet';\n\nL.EditControl = L.Control.extend({\n\n  options: {\n    position: 'topleft',\n    callback: null,\n    kind: '',\n    html: ''\n  },\n\n  onAdd: function (map) {\n    var container = L.DomUtil.create('div', 'leaflet-control leaflet-bar'),\n        link = L.DomUtil.create('a', '', container);\n\n    link.href = '#';\n    link.title = 'Create a new ' + this.options.kind;\n    link.innerHTML = this.options.html;\n    L.DomEvent.on(link, 'click', L.DomEvent.stop)\n              .on(link, 'click', function () {\n                window.LAYER = this.options.callback.call(map.editTools);\n              }, this);\n\n    return container;\n  }\n\n});\n\nL.NewPolygonControl = L.EditControl.extend({\n  options: {\n    position: 'topleft',\n    kind: 'polygon',\n    html: '▰'\n  }\n});\n","import L from 'leaflet';\n\nL.BooleanControl = L.Control.extend({\n  options: {\n    position: 'topright'\n  },\n\n  onAdd: function(map) {\n    var container = this._container = L.DomUtil.create('div', 'leaflet-bar');\n    this._container.style.background = '#ffffff';\n    this._container.style.padding = '10px';\n    container.innerHTML = [\n      '<form>',\n        '<ul style=\"list-style:none; padding-left: 0\">',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"0\" checked />',  ' Intersection', '</label>', '</li>',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"1\" />',  ' Union', '</label>', '</li>',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"2\" />',  ' Difference A - B', '</label>', '</li>',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"5\" />',  ' Difference B - A', '</label>', '</li>',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"3\" />',  ' Xor', '</label>', '</li>',\n        '</ul>',\n        '<input type=\"submit\" value=\"Run\">', '<input name=\"clear\" type=\"button\" value=\"Clear layers\">',\n      '</form>'].join('');\n    var form = container.querySelector('form');\n    L.DomEvent\n      .on(form, 'submit', function (evt) {\n        L.DomEvent.stop(evt);\n        var radios = Array.prototype.slice.call(\n          form.querySelectorAll('input[type=radio]'));\n        for (var i = 0, len = radios.length; i < len; i++) {\n          if (radios[i].checked) {\n            this.options.callback(parseInt(radios[i].value));\n            break;\n          }\n        }\n      }, this)\n      .on(form['clear'], 'click', function(evt) {\n        L.DomEvent.stop(evt);\n        this.options.clear();\n      }, this);\n\n    L.DomEvent\n      .disableClickPropagation(this._container)\n      .disableScrollPropagation(this._container);\n    return this._container;\n  }\n\n});\n","/**\n * martinez-polygon-clipping v0.5.0\n * Martinez polygon clipping algorithm, does boolean operation on polygons (multipolygons, polygons with holes etc): intersection, union, difference, xor\n *\n * @author Alex Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = global || self, factory(global['martinez-polygon-clipping'] = {}));\n}(this, function (exports) { 'use strict';\n\n    /**\n     * splaytree v3.0.0\n     * Fast Splay tree for Node and browser\n     *\n     * @author Alexander Milevski <info@w8r.name>\n     * @license MIT\n     * @preserve\n     */\n\n    class Node {\r\n        constructor(key, data) {\r\n            this.next = null;\r\n            this.key = key;\r\n            this.data = data;\r\n            this.left = null;\r\n            this.right = null;\r\n        }\r\n    }\n\n    /* follows \"An implementation of top-down splaying\"\r\n     * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n     */\r\n    function DEFAULT_COMPARE(a, b) {\r\n        return a > b ? 1 : a < b ? -1 : 0;\r\n    }\r\n    /**\r\n     * Simple top down splay, not requiring i to be in the tree t.\r\n     */\r\n    function splay(i, t, comparator) {\r\n        const N = new Node(null, null);\r\n        let l = N;\r\n        let r = N;\r\n        while (true) {\r\n            const cmp = comparator(i, t.key);\r\n            //if (i < t.key) {\r\n            if (cmp < 0) {\r\n                if (t.left === null)\r\n                    break;\r\n                //if (i < t.left.key) {\r\n                if (comparator(i, t.left.key) < 0) {\r\n                    const y = t.left; /* rotate right */\r\n                    t.left = y.right;\r\n                    y.right = t;\r\n                    t = y;\r\n                    if (t.left === null)\r\n                        break;\r\n                }\r\n                r.left = t; /* link right */\r\n                r = t;\r\n                t = t.left;\r\n                //} else if (i > t.key) {\r\n            }\r\n            else if (cmp > 0) {\r\n                if (t.right === null)\r\n                    break;\r\n                //if (i > t.right.key) {\r\n                if (comparator(i, t.right.key) > 0) {\r\n                    const y = t.right; /* rotate left */\r\n                    t.right = y.left;\r\n                    y.left = t;\r\n                    t = y;\r\n                    if (t.right === null)\r\n                        break;\r\n                }\r\n                l.right = t; /* link left */\r\n                l = t;\r\n                t = t.right;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n        /* assemble */\r\n        l.right = t.left;\r\n        r.left = t.right;\r\n        t.left = N.right;\r\n        t.right = N.left;\r\n        return t;\r\n    }\r\n    function insert(i, data, t, comparator) {\r\n        const node = new Node(i, data);\r\n        if (t === null) {\r\n            node.left = node.right = null;\r\n            return node;\r\n        }\r\n        t = splay(i, t, comparator);\r\n        const cmp = comparator(i, t.key);\r\n        if (cmp < 0) {\r\n            node.left = t.left;\r\n            node.right = t;\r\n            t.left = null;\r\n        }\r\n        else if (cmp >= 0) {\r\n            node.right = t.right;\r\n            node.left = t;\r\n            t.right = null;\r\n        }\r\n        return node;\r\n    }\r\n    function split(key, v, comparator) {\r\n        let left = null;\r\n        let right = null;\r\n        if (v) {\r\n            v = splay(key, v, comparator);\r\n            const cmp = comparator(v.key, key);\r\n            if (cmp === 0) {\r\n                left = v.left;\r\n                right = v.right;\r\n            }\r\n            else if (cmp < 0) {\r\n                right = v.right;\r\n                v.right = null;\r\n                left = v;\r\n            }\r\n            else {\r\n                left = v.left;\r\n                v.left = null;\r\n                right = v;\r\n            }\r\n        }\r\n        return { left, right };\r\n    }\r\n    function merge(left, right, comparator) {\r\n        if (right === null)\r\n            return left;\r\n        if (left === null)\r\n            return right;\r\n        right = splay(left.key, right, comparator);\r\n        right.left = left;\r\n        return right;\r\n    }\r\n    /**\r\n     * Prints level of the tree\r\n     */\r\n    function printRow(root, prefix, isTail, out, printNode) {\r\n        if (root) {\r\n            out(`${prefix}${isTail ? '└── ' : '├── '}${printNode(root)}\\n`);\r\n            const indent = prefix + (isTail ? '    ' : '│   ');\r\n            if (root.left)\r\n                printRow(root.left, indent, false, out, printNode);\r\n            if (root.right)\r\n                printRow(root.right, indent, true, out, printNode);\r\n        }\r\n    }\r\n    class Tree {\r\n        constructor(comparator = DEFAULT_COMPARE) {\r\n            this._root = null;\r\n            this._size = 0;\r\n            this._comparator = comparator;\r\n        }\r\n        /**\r\n         * Inserts a key, allows duplicates\r\n         */\r\n        insert(key, data) {\r\n            this._size++;\r\n            return this._root = insert(key, data, this._root, this._comparator);\r\n        }\r\n        /**\r\n         * Adds a key, if it is not present in the tree\r\n         */\r\n        add(key, data) {\r\n            const node = new Node(key, data);\r\n            if (this._root === null) {\r\n                node.left = node.right = null;\r\n                this._size++;\r\n                this._root = node;\r\n            }\r\n            const comparator = this._comparator;\r\n            const t = splay(key, this._root, comparator);\r\n            const cmp = comparator(key, t.key);\r\n            if (cmp === 0)\r\n                this._root = t;\r\n            else {\r\n                if (cmp < 0) {\r\n                    node.left = t.left;\r\n                    node.right = t;\r\n                    t.left = null;\r\n                }\r\n                else if (cmp > 0) {\r\n                    node.right = t.right;\r\n                    node.left = t;\r\n                    t.right = null;\r\n                }\r\n                this._size++;\r\n                this._root = node;\r\n            }\r\n            return this._root;\r\n        }\r\n        /**\r\n         * @param  {Key} key\r\n         * @return {Node|null}\r\n         */\r\n        remove(key) {\r\n            this._root = this._remove(key, this._root, this._comparator);\r\n        }\r\n        /**\r\n         * Deletes i from the tree if it's there\r\n         */\r\n        _remove(i, t, comparator) {\r\n            let x;\r\n            if (t === null)\r\n                return null;\r\n            t = splay(i, t, comparator);\r\n            const cmp = comparator(i, t.key);\r\n            if (cmp === 0) { /* found it */\r\n                if (t.left === null) {\r\n                    x = t.right;\r\n                }\r\n                else {\r\n                    x = splay(i, t.left, comparator);\r\n                    x.right = t.right;\r\n                }\r\n                this._size--;\r\n                return x;\r\n            }\r\n            return t; /* It wasn't there */\r\n        }\r\n        /**\r\n         * Removes and returns the node with smallest key\r\n         */\r\n        pop() {\r\n            let node = this._root;\r\n            if (node) {\r\n                while (node.left)\r\n                    node = node.left;\r\n                this._root = splay(node.key, this._root, this._comparator);\r\n                this._root = this._remove(node.key, this._root, this._comparator);\r\n                return { key: node.key, data: node.data };\r\n            }\r\n            return null;\r\n        }\r\n        /**\r\n         * Find without splaying\r\n         */\r\n        findStatic(key) {\r\n            let current = this._root;\r\n            const compare = this._comparator;\r\n            while (current) {\r\n                const cmp = compare(key, current.key);\r\n                if (cmp === 0)\r\n                    return current;\r\n                else if (cmp < 0)\r\n                    current = current.left;\r\n                else\r\n                    current = current.right;\r\n            }\r\n            return null;\r\n        }\r\n        find(key) {\r\n            if (this._root) {\r\n                this._root = splay(key, this._root, this._comparator);\r\n                if (this._comparator(key, this._root.key) !== 0)\r\n                    return null;\r\n            }\r\n            return this._root;\r\n        }\r\n        contains(key) {\r\n            let current = this._root;\r\n            const compare = this._comparator;\r\n            while (current) {\r\n                const cmp = compare(key, current.key);\r\n                if (cmp === 0)\r\n                    return true;\r\n                else if (cmp < 0)\r\n                    current = current.left;\r\n                else\r\n                    current = current.right;\r\n            }\r\n            return false;\r\n        }\r\n        forEach(visitor, ctx) {\r\n            let current = this._root;\r\n            const Q = []; /* Initialize stack s */\r\n            let done = false;\r\n            while (!done) {\r\n                if (current !== null) {\r\n                    Q.push(current);\r\n                    current = current.left;\r\n                }\r\n                else {\r\n                    if (Q.length !== 0) {\r\n                        current = Q.pop();\r\n                        visitor.call(ctx, current);\r\n                        current = current.right;\r\n                    }\r\n                    else\r\n                        done = true;\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n         */\r\n        range(low, high, fn, ctx) {\r\n            const Q = [];\r\n            const compare = this._comparator;\r\n            let node = this._root;\r\n            let cmp;\r\n            while (Q.length !== 0 || node) {\r\n                if (node) {\r\n                    Q.push(node);\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = Q.pop();\r\n                    cmp = compare(node.key, high);\r\n                    if (cmp > 0) {\r\n                        break;\r\n                    }\r\n                    else if (compare(node.key, low) >= 0) {\r\n                        if (fn.call(ctx, node))\r\n                            return this; // stop if smth is returned\r\n                    }\r\n                    node = node.right;\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n        /**\r\n         * Returns array of keys\r\n         */\r\n        keys() {\r\n            const keys = [];\r\n            this.forEach(({ key }) => keys.push(key));\r\n            return keys;\r\n        }\r\n        /**\r\n         * Returns array of all the data in the nodes\r\n         */\r\n        values() {\r\n            const values = [];\r\n            this.forEach(({ data }) => values.push(data));\r\n            return values;\r\n        }\r\n        min() {\r\n            if (this._root)\r\n                return this.minNode(this._root).key;\r\n            return null;\r\n        }\r\n        max() {\r\n            if (this._root)\r\n                return this.maxNode(this._root).key;\r\n            return null;\r\n        }\r\n        minNode(t = this._root) {\r\n            if (t)\r\n                while (t.left)\r\n                    t = t.left;\r\n            return t;\r\n        }\r\n        maxNode(t = this._root) {\r\n            if (t)\r\n                while (t.right)\r\n                    t = t.right;\r\n            return t;\r\n        }\r\n        /**\r\n         * Returns node at given index\r\n         */\r\n        at(index) {\r\n            let current = this._root;\r\n            let done = false;\r\n            let i = 0;\r\n            const Q = [];\r\n            while (!done) {\r\n                if (current) {\r\n                    Q.push(current);\r\n                    current = current.left;\r\n                }\r\n                else {\r\n                    if (Q.length > 0) {\r\n                        current = Q.pop();\r\n                        if (i === index)\r\n                            return current;\r\n                        i++;\r\n                        current = current.right;\r\n                    }\r\n                    else\r\n                        done = true;\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        next(d) {\r\n            let root = this._root;\r\n            let successor = null;\r\n            if (d.right) {\r\n                successor = d.right;\r\n                while (successor.left)\r\n                    successor = successor.left;\r\n                return successor;\r\n            }\r\n            const comparator = this._comparator;\r\n            while (root) {\r\n                const cmp = comparator(d.key, root.key);\r\n                if (cmp === 0)\r\n                    break;\r\n                else if (cmp < 0) {\r\n                    successor = root;\r\n                    root = root.left;\r\n                }\r\n                else\r\n                    root = root.right;\r\n            }\r\n            return successor;\r\n        }\r\n        prev(d) {\r\n            let root = this._root;\r\n            let predecessor = null;\r\n            if (d.left !== null) {\r\n                predecessor = d.left;\r\n                while (predecessor.right)\r\n                    predecessor = predecessor.right;\r\n                return predecessor;\r\n            }\r\n            const comparator = this._comparator;\r\n            while (root) {\r\n                const cmp = comparator(d.key, root.key);\r\n                if (cmp === 0)\r\n                    break;\r\n                else if (cmp < 0)\r\n                    root = root.left;\r\n                else {\r\n                    predecessor = root;\r\n                    root = root.right;\r\n                }\r\n            }\r\n            return predecessor;\r\n        }\r\n        clear() {\r\n            this._root = null;\r\n            this._size = 0;\r\n            return this;\r\n        }\r\n        toList() {\r\n            return toList(this._root);\r\n        }\r\n        /**\r\n         * Bulk-load items. Both array have to be same size\r\n         */\r\n        load(keys, values = [], presort = false) {\r\n            let size = keys.length;\r\n            const comparator = this._comparator;\r\n            // sort if needed\r\n            if (presort)\r\n                sort(keys, values, 0, size - 1, comparator);\r\n            if (this._root === null) { // empty tree\r\n                this._root = loadRecursive(keys, values, 0, size);\r\n                this._size = size;\r\n            }\r\n            else { // that re-builds the whole tree from two in-order traversals\r\n                const mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\r\n                size = this._size + size;\r\n                this._root = sortedListToBST({ head: mergedList }, 0, size);\r\n            }\r\n            return this;\r\n        }\r\n        isEmpty() { return this._root === null; }\r\n        get size() { return this._size; }\r\n        get root() { return this._root; }\r\n        toString(printNode = (n) => String(n.key)) {\r\n            const out = [];\r\n            printRow(this._root, '', true, (v) => out.push(v), printNode);\r\n            return out.join('');\r\n        }\r\n        update(key, newKey, newData) {\r\n            const comparator = this._comparator;\r\n            let { left, right } = split(key, this._root, comparator);\r\n            if (comparator(key, newKey) < 0) {\r\n                right = insert(newKey, newData, right, comparator);\r\n            }\r\n            else {\r\n                left = insert(newKey, newData, left, comparator);\r\n            }\r\n            this._root = merge(left, right, comparator);\r\n        }\r\n        split(key) {\r\n            return split(key, this._root, this._comparator);\r\n        }\r\n    }\r\n    function loadRecursive(keys, values, start, end) {\r\n        const size = end - start;\r\n        if (size > 0) {\r\n            const middle = start + Math.floor(size / 2);\r\n            const key = keys[middle];\r\n            const data = values[middle];\r\n            const node = new Node(key, data);\r\n            node.left = loadRecursive(keys, values, start, middle);\r\n            node.right = loadRecursive(keys, values, middle + 1, end);\r\n            return node;\r\n        }\r\n        return null;\r\n    }\r\n    function createList(keys, values) {\r\n        const head = new Node(null, null);\r\n        let p = head;\r\n        for (let i = 0; i < keys.length; i++) {\r\n            p = p.next = new Node(keys[i], values[i]);\r\n        }\r\n        p.next = null;\r\n        return head.next;\r\n    }\r\n    function toList(root) {\r\n        let current = root;\r\n        const Q = [];\r\n        let done = false;\r\n        const head = new Node(null, null);\r\n        let p = head;\r\n        while (!done) {\r\n            if (current) {\r\n                Q.push(current);\r\n                current = current.left;\r\n            }\r\n            else {\r\n                if (Q.length > 0) {\r\n                    current = p = p.next = Q.pop();\r\n                    current = current.right;\r\n                }\r\n                else\r\n                    done = true;\r\n            }\r\n        }\r\n        p.next = null; // that'll work even if the tree was empty\r\n        return head.next;\r\n    }\r\n    function sortedListToBST(list, start, end) {\r\n        const size = end - start;\r\n        if (size > 0) {\r\n            const middle = start + Math.floor(size / 2);\r\n            const left = sortedListToBST(list, start, middle);\r\n            const root = list.head;\r\n            root.left = left;\r\n            list.head = list.head.next;\r\n            root.right = sortedListToBST(list, middle + 1, end);\r\n            return root;\r\n        }\r\n        return null;\r\n    }\r\n    function mergeLists(l1, l2, compare) {\r\n        const head = new Node(null, null); // dummy\r\n        let p = head;\r\n        let p1 = l1;\r\n        let p2 = l2;\r\n        while (p1 !== null && p2 !== null) {\r\n            if (compare(p1.key, p2.key) < 0) {\r\n                p.next = p1;\r\n                p1 = p1.next;\r\n            }\r\n            else {\r\n                p.next = p2;\r\n                p2 = p2.next;\r\n            }\r\n            p = p.next;\r\n        }\r\n        if (p1 !== null) {\r\n            p.next = p1;\r\n        }\r\n        else if (p2 !== null) {\r\n            p.next = p2;\r\n        }\r\n        return head.next;\r\n    }\r\n    function sort(keys, values, left, right, compare) {\r\n        if (left >= right)\r\n            return;\r\n        const pivot = keys[(left + right) >> 1];\r\n        let i = left - 1;\r\n        let j = right + 1;\r\n        while (true) {\r\n            do\r\n                i++;\r\n            while (compare(keys[i], pivot) < 0);\r\n            do\r\n                j--;\r\n            while (compare(keys[j], pivot) > 0);\r\n            if (i >= j)\r\n                break;\r\n            let tmp = keys[i];\r\n            keys[i] = keys[j];\r\n            keys[j] = tmp;\r\n            tmp = values[i];\r\n            values[i] = values[j];\r\n            values[j] = tmp;\r\n        }\r\n        sort(keys, values, left, j, compare);\r\n        sort(keys, values, j + 1, right, compare);\r\n    }\n\n    var NORMAL = 0;\r\n    var NON_CONTRIBUTING = 1;\r\n    var SAME_TRANSITION = 2;\r\n    var DIFFERENT_TRANSITION = 3;\n\n    var INTERSECTION = 0;\r\n    var UNION = 1;\r\n    var DIFFERENCE = 2;\r\n    var XOR = 3;\n\n    /**\r\n     * @param  {SweepEvent} event\r\n     * @param  {SweepEvent} prev\r\n     * @param  {Operation} operation\r\n     */\r\n    function computeFields(event, prev, operation) {\r\n        // compute inOut and otherInOut fields\r\n        if (prev === null) {\r\n            event.inOut = false;\r\n            event.otherInOut = true;\r\n            // previous line segment in sweepline belongs to the same polygon\r\n        }\r\n        else {\r\n            if (event.isSubject === prev.isSubject) {\r\n                event.inOut = !prev.inOut;\r\n                event.otherInOut = prev.otherInOut;\r\n                // previous line segment in sweepline belongs to the clipping polygon\r\n            }\r\n            else {\r\n                event.inOut = !prev.otherInOut;\r\n                event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\r\n            }\r\n            // compute prevInResult field\r\n            if (prev) {\r\n                event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\r\n                    ? prev.prevInResult : prev;\r\n            }\r\n        }\r\n        // check if the line segment belongs to the Boolean operation\r\n        event.inResult = inResult(event, operation);\r\n    }\r\n    /* eslint-disable indent */\r\n    function inResult(event, operation) {\r\n        switch (event.type) {\r\n            case NORMAL:\r\n                switch (operation) {\r\n                    case INTERSECTION:\r\n                        return !event.otherInOut;\r\n                    case UNION:\r\n                        return event.otherInOut;\r\n                    case DIFFERENCE:\r\n                        // return (event.isSubject && !event.otherInOut) ||\r\n                        //         (!event.isSubject && event.otherInOut);\r\n                        return (event.isSubject && event.otherInOut) ||\r\n                            (!event.isSubject && !event.otherInOut);\r\n                    case XOR:\r\n                        return true;\r\n                }\r\n                break;\r\n            case SAME_TRANSITION:\r\n                return operation === INTERSECTION || operation === UNION;\r\n            case DIFFERENT_TRANSITION:\r\n                return operation === DIFFERENCE;\r\n            case NON_CONTRIBUTING:\r\n                return false;\r\n        }\r\n        return false;\r\n    }\r\n    /* eslint-enable indent */\n\n    /**\r\n     * Sweepline event\r\n     */\r\n    var SweepEvent = /** @class */ (function () {\r\n        function SweepEvent(point, left, otherEvent, isSubject, edgeType) {\r\n            if (edgeType === void 0) { edgeType = NORMAL; }\r\n            this.left = left;\r\n            this.point = point;\r\n            this.otherEvent = otherEvent;\r\n            this.isSubject = isSubject;\r\n            this.type = edgeType;\r\n            this.inOut = false;\r\n            this.otherInOut = false;\r\n            this.prevInResult = null;\r\n            this.inResult = false;\r\n            // connection step\r\n            this.resultInOut = false;\r\n            this.isExteriorRing = true;\r\n        }\r\n        /**\r\n         * @param  {Array.<Number>}  p\r\n         * @return {Boolean}\r\n         */\r\n        SweepEvent.prototype.isBelow = function (p) {\r\n            var p0 = this.point, p1 = this.otherEvent.point;\r\n            return this.left\r\n                ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\r\n                // signedArea(this.point, this.otherEvent.point, p) > 0 :\r\n                : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\r\n            //signedArea(this.otherEvent.point, this.point, p) > 0;\r\n        };\r\n        /**\r\n         * @param  {Array.<Number>}  p\r\n         * @return {Boolean}\r\n         */\r\n        SweepEvent.prototype.isAbove = function (p) {\r\n            return !this.isBelow(p);\r\n        };\r\n        /**\r\n         * @return {Boolean}\r\n         */\r\n        SweepEvent.prototype.isVertical = function () {\r\n            return this.point[0] === this.otherEvent.point[0];\r\n        };\r\n        SweepEvent.prototype.clone = function () {\r\n            var copy = new SweepEvent(this.point, this.left, this.otherEvent, this.isSubject, this.type);\r\n            copy.inResult = this.inResult;\r\n            copy.prevInResult = this.prevInResult;\r\n            copy.isExteriorRing = this.isExteriorRing;\r\n            copy.inOut = this.inOut;\r\n            copy.otherInOut = this.otherInOut;\r\n            return copy;\r\n        };\r\n        return SweepEvent;\r\n    }());\n\n    function equals(p1, p2) {\r\n        if (p1[0] === p2[0]) {\r\n            if (p1[1] === p2[1]) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    // const EPSILON = 1e-9;\r\n    // const abs = Math.abs;\r\n    // TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\r\n    // Precision problem.\r\n    //\r\n    // module.exports = function equals(p1, p2) {\r\n    //   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\r\n    // };\n\n    /**\r\n     * Signed area of the triangle (p0, p1, p2)\r\n     */\r\n    function signedArea(p0, p1, p2) {\r\n        return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\r\n    }\n\n    function compareEvents(e1, e2) {\r\n        var p1 = e1.point;\r\n        var p2 = e2.point;\r\n        // Different x-coordinate\r\n        if (p1[0] > p2[0])\r\n            return 1;\r\n        if (p1[0] < p2[0])\r\n            return -1;\r\n        // Different points, but same x-coordinate\r\n        // Event with lower y-coordinate is processed first\r\n        if (p1[1] !== p2[1])\r\n            return p1[1] > p2[1] ? 1 : -1;\r\n        return specialCases(e1, e2, p1, p2);\r\n    }\r\n    /* eslint-disable no-unused-vars */\r\n    function specialCases(e1, e2, p1, p2) {\r\n        // Same coordinates, but one is a left endpoint and the other is\r\n        // a right endpoint. The right endpoint is processed first\r\n        if (e1.left !== e2.left)\r\n            return e1.left ? 1 : -1;\r\n        // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\r\n        // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\r\n        // Same coordinates, both events\r\n        // are left endpoints or right endpoints.\r\n        // not collinear\r\n        if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\r\n            // the event associate to the bottom segment is processed first\r\n            return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\r\n        }\r\n        return (!e1.isSubject && e2.isSubject) ? 1 : -1;\r\n    }\r\n    /* eslint-enable no-unused-vars */\n\n    /**\r\n     * @param  {SweepEvent} se\r\n     * @param  {Array.<Number>} p\r\n     * @param  {Queue} queue\r\n     * @return {Queue}\r\n     */\r\n    function divideSegment(se, p, queue) {\r\n        var r = new SweepEvent(p, false, se, se.isSubject);\r\n        var l = new SweepEvent(p, true, se.otherEvent, se.isSubject);\r\n        /* eslint-disable no-console */\r\n        if (equals(se.point, se.otherEvent.point)) {\r\n            console.warn('what is that, a collapsed segment?', se);\r\n        }\r\n        /* eslint-enable no-console */\r\n        r.contourId = l.contourId = se.contourId;\r\n        // avoid a rounding error. The left event would be processed after the right event\r\n        if (compareEvents(l, se.otherEvent) > 0) {\r\n            se.otherEvent.left = true;\r\n            l.left = false;\r\n        }\r\n        // avoid a rounding error. The left event would be processed after the right event\r\n        // if (compareEvents(se, r) > 0) {}\r\n        se.otherEvent.otherEvent = l;\r\n        se.otherEvent = r;\r\n        queue.push(l);\r\n        queue.push(r);\r\n        return queue;\r\n    }\n\n    var EPS = 1e-9;\r\n    /**\r\n     * Finds the magnitude of the cross product of two vectors (if we pretend\r\n     * they're in three dimensions)\r\n     *\r\n     * @param {Object} a First vector\r\n     * @param {Object} b Second vector\r\n     * @private\r\n     * @returns {Number} The magnitude of the cross product\r\n     */\r\n    function crossProduct(a, b) {\r\n        return (a[0] * b[1]) - (a[1] * b[0]);\r\n    }\r\n    /**\r\n     * Finds the dot product of two vectors.\r\n     *\r\n     * @param {Object} a First vector\r\n     * @param {Object} b Second vector\r\n     * @private\r\n     * @returns {Number} The dot product\r\n     */\r\n    function dotProduct(a, b) {\r\n        return (a[0] * b[0]) + (a[1] * b[1]);\r\n    }\r\n    /**\r\n     * Finds the intersection (if any) between two line segments a and b, given the\r\n     * line segments' end points a1, a2 and b1, b2.\r\n     *\r\n     * This algorithm is based on Schneider and Eberly.\r\n     * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\r\n     * Page 244.\r\n     *\r\n     * @param {Array.<Number>} a1 point of first line\r\n     * @param {Array.<Number>} a2 point of first line\r\n     * @param {Array.<Number>} b1 point of second line\r\n     * @param {Array.<Number>} b2 point of second line\r\n     * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\r\n     *                                         (meaning connected segments) as\r\n     *                                         intersections\r\n     * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\r\n     * intersection. If they overlap, the two end points of the overlapping segment.\r\n     * Otherwise, null.\r\n     */\r\n    function intersection (a1, a2, b1, b2, noEndpointTouch) {\r\n        // The algorithm expects our lines in the form P + sd, where P is a point,\r\n        // s is on the interval [0, 1], and d is a vector.\r\n        // We are passed two points. P can be the first point of each pair. The\r\n        // vector, then, could be thought of as the distance (in x and y components)\r\n        // from the first point to the second point.\r\n        // So first, let's make our vectors:\r\n        var va = [a2[0] - a1[0], a2[1] - a1[1]];\r\n        var vb = [b2[0] - b1[0], b2[1] - b1[1]];\r\n        // We also define a function to convert back to regular point form:\r\n        /* eslint-disable arrow-body-style */\r\n        function toPoint(p, s, d) {\r\n            return [\r\n                p[0] + s * d[0],\r\n                p[1] + s * d[1]\r\n            ];\r\n        }\r\n        /* eslint-enable arrow-body-style */\r\n        // The rest is pretty much a straight port of the algorithm.\r\n        var e = [b1[0] - a1[0], b1[1] - a1[1]];\r\n        var kross = crossProduct(va, vb);\r\n        var sqrKross = kross * kross;\r\n        var sqrLenA = dotProduct(va, va);\r\n        var sqrLenB = dotProduct(vb, vb);\r\n        // Check for line intersection. This works because of the properties of the\r\n        // cross product -- specifically, two vectors are parallel if and only if the\r\n        // cross product is the 0 vector. The full calculation involves relative error\r\n        // to account for possible very small line segments. See Schneider & Eberly\r\n        // for details.\r\n        if (sqrKross > EPS * sqrLenB * sqrLenA) {\r\n            // If they're not parallel, then (because these are line segments) they\r\n            // still might not actually intersect. This code checks that the\r\n            // intersection point of the lines is actually on both line segments.\r\n            var s = crossProduct(e, vb) / kross;\r\n            if (s < 0 || s > 1) {\r\n                // not on line segment a\r\n                return null;\r\n            }\r\n            var t = crossProduct(e, va) / kross;\r\n            if (t < 0 || t > 1) {\r\n                // not on line segment b\r\n                return null;\r\n            }\r\n            if (s === 0 || s === 1) {\r\n                // on an endpoint of line segment a\r\n                return noEndpointTouch ? null : [toPoint(a1, s, va)];\r\n            }\r\n            if (t === 0 || t === 1) {\r\n                // on an endpoint of line segment b\r\n                return noEndpointTouch ? null : [toPoint(b1, t, vb)];\r\n            }\r\n            return [toPoint(a1, s, va)];\r\n        }\r\n        // If we've reached this point, then the lines are either parallel or the\r\n        // same, but the segments could overlap partially or fully, or not at all.\r\n        // So we need to find the overlap, if any. To do that, we can use e, which is\r\n        // the (vector) difference between the two initial points. If this is parallel\r\n        // with the line itself, then the two lines are the same line, and there will\r\n        // be overlap.\r\n        var sqrLenE = dotProduct(e, e);\r\n        kross = crossProduct(e, va);\r\n        sqrKross = kross * kross;\r\n        if (sqrKross > EPS * sqrLenB * sqrLenE) {\r\n            // Lines are just parallel, not the same. No overlap.\r\n            return null;\r\n        }\r\n        var sa = dotProduct(va, e) / sqrLenA;\r\n        var sb = sa + dotProduct(va, vb) / sqrLenA;\r\n        var smin = Math.min(sa, sb);\r\n        var smax = Math.max(sa, sb);\r\n        // this is, essentially, the FindIntersection acting on floats from\r\n        // Schneider & Eberly, just inlined into this function.\r\n        if (smin <= 1 && smax >= 0) {\r\n            // overlap on an end point\r\n            if (smin === 1) {\r\n                return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\r\n            }\r\n            if (smax === 0) {\r\n                return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\r\n            }\r\n            if (noEndpointTouch && smin === 0 && smax === 1)\r\n                return null;\r\n            // There's overlap on a segment -- two points of intersection. Return both.\r\n            return [\r\n                toPoint(a1, smin > 0 ? smin : 0, va),\r\n                toPoint(a1, smax < 1 ? smax : 1, va)\r\n            ];\r\n        }\r\n        return null;\r\n    }\n\n    /**\r\n     * @param  {SweepEvent} se1\r\n     * @param  {SweepEvent} se2\r\n     * @param  {Queue}      queue\r\n     * @return {Number}\r\n     */\r\n    function possibleIntersection(se1, se2, queue) {\r\n        // that disallows self-intersecting polygons,\r\n        // did cost us half a day, so I'll leave it\r\n        // out of respect\r\n        // if (se1.isSubject === se2.isSubject) return;\r\n        var inter = intersection(se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point, false);\r\n        var nintersections = inter ? inter.length : 0;\r\n        if (nintersections === 0)\r\n            return 0; // no intersection\r\n        // the line segments intersect at an endpoint of both line segments\r\n        if ((nintersections === 1) &&\r\n            (equals(se1.point, se2.point) ||\r\n                equals(se1.otherEvent.point, se2.otherEvent.point))) {\r\n            return 0;\r\n        }\r\n        if (nintersections === 2 && se1.isSubject === se2.isSubject) {\r\n            // if(se1.contourId === se2.contourId){\r\n            // console.warn('Edges of the same polygon overlap',\r\n            //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\r\n            // }\r\n            //throw new Error('Edges of the same polygon overlap');\r\n            return 0;\r\n        }\r\n        // The line segments associated to se1 and se2 intersect\r\n        if (nintersections === 1) {\r\n            // if the intersection point is not an endpoint of se1\r\n            if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\r\n                divideSegment(se1, inter[0], queue);\r\n            }\r\n            // if the intersection point is not an endpoint of se2\r\n            if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\r\n                divideSegment(se2, inter[0], queue);\r\n            }\r\n            return 1;\r\n        }\r\n        // The line segments associated to se1 and se2 overlap\r\n        var events = [];\r\n        var leftCoincide = false;\r\n        var rightCoincide = false;\r\n        if (equals(se1.point, se2.point)) {\r\n            leftCoincide = true; // linked\r\n        }\r\n        else if (compareEvents(se1, se2) === 1) {\r\n            events.push(se2, se1);\r\n        }\r\n        else {\r\n            events.push(se1, se2);\r\n        }\r\n        if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\r\n            rightCoincide = true;\r\n        }\r\n        else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\r\n            events.push(se2.otherEvent, se1.otherEvent);\r\n        }\r\n        else {\r\n            events.push(se1.otherEvent, se2.otherEvent);\r\n        }\r\n        if ((leftCoincide && rightCoincide) || leftCoincide) {\r\n            // both line segments are equal or share the left endpoint\r\n            se2.type = NON_CONTRIBUTING;\r\n            se1.type = (se2.inOut === se1.inOut)\r\n                ? SAME_TRANSITION : DIFFERENT_TRANSITION;\r\n            if (leftCoincide && !rightCoincide) {\r\n                // honestly no idea, but changing events selection from [2, 1]\r\n                // to [0, 1] fixes the overlapping self-intersecting polygons issue\r\n                divideSegment(events[1].otherEvent, events[0].point, queue);\r\n            }\r\n            return 2;\r\n        }\r\n        // the line segments share the right endpoint\r\n        if (rightCoincide) {\r\n            divideSegment(events[0], events[1].point, queue);\r\n            return 3;\r\n        }\r\n        // no line segment includes totally the other one\r\n        if (events[0] !== events[3].otherEvent) {\r\n            divideSegment(events[0], events[1].point, queue);\r\n            divideSegment(events[1], events[2].point, queue);\r\n            return 3;\r\n        }\r\n        // one line segment includes the other one\r\n        divideSegment(events[0], events[1].point, queue);\r\n        divideSegment(events[3].otherEvent, events[2].point, queue);\r\n        return 3;\r\n    }\n\n    function compareSegments(le1, le2) {\r\n        if (le1 === le2)\r\n            return 0;\r\n        // Segments are not collinear\r\n        if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\r\n            signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\r\n            // If they share their left endpoint use the right endpoint to sort\r\n            if (equals(le1.point, le2.point))\r\n                return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\r\n            // Different left endpoint: use the left endpoint to sort\r\n            if (le1.point[0] === le2.point[0])\r\n                return le1.point[1] < le2.point[1] ? -1 : 1;\r\n            // has the line segment associated to e1 been inserted\r\n            // into S after the line segment associated to e2 ?\r\n            if (compareEvents(le1, le2) === 1)\r\n                return le2.isAbove(le1.point) ? -1 : 1;\r\n            // The line segment associated to e2 has been inserted\r\n            // into S after the line segment associated to e1\r\n            return le1.isBelow(le2.point) ? -1 : 1;\r\n        }\r\n        if (le1.isSubject === le2.isSubject) { // same polygon\r\n            var p1 = le1.point, p2 = le2.point;\r\n            if (p1[0] === p2[0] && p1[1] === p2[1] /*equals(le1.point, le2.point)*/) {\r\n                p1 = le1.otherEvent.point;\r\n                p2 = le2.otherEvent.point;\r\n                if (p1[0] === p2[0] && p1[1] === p2[1])\r\n                    return 0;\r\n                else\r\n                    return le1.contourId > le2.contourId ? 1 : -1;\r\n            }\r\n        }\r\n        else { // Segments are collinear, but belong to separate polygons\r\n            return le1.isSubject ? -1 : 1;\r\n        }\r\n        return compareEvents(le1, le2) === 1 ? 1 : -1;\r\n    }\n\n    function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\r\n        var sweepLine = new Tree(compareSegments);\r\n        var sortedEvents = [];\r\n        var rightbound = Math.min(sbbox[2], cbbox[2]);\r\n        var prev, next, begin;\r\n        while (eventQueue.length !== 0) {\r\n            var event_1 = eventQueue.pop();\r\n            sortedEvents.push(event_1);\r\n            // optimization by bboxes for intersection and difference goes here\r\n            if ((operation === INTERSECTION && event_1.point[0] > rightbound) ||\r\n                (operation === DIFFERENCE && event_1.point[0] > sbbox[2])) {\r\n                break;\r\n            }\r\n            if (event_1.left) {\r\n                next = prev = sweepLine.insert(event_1);\r\n                begin = sweepLine.minNode();\r\n                if (prev !== begin)\r\n                    prev = sweepLine.prev(prev);\r\n                else\r\n                    prev = null;\r\n                next = sweepLine.next(next);\r\n                var prevEvent = prev ? prev.key : null;\r\n                var prevprevEvent = void 0;\r\n                computeFields(event_1, prevEvent, operation);\r\n                if (next) {\r\n                    if (possibleIntersection(event_1, next.key, eventQueue) === 2) {\r\n                        computeFields(event_1, prevEvent, operation);\r\n                        computeFields(event_1, next.key, operation);\r\n                    }\r\n                }\r\n                if (prev) {\r\n                    if (possibleIntersection(prev.key, event_1, eventQueue) === 2) {\r\n                        var prevprev = prev;\r\n                        if (prevprev !== begin)\r\n                            prevprev = sweepLine.prev(prevprev);\r\n                        else\r\n                            prevprev = null;\r\n                        prevprevEvent = prevprev ? prevprev.key : null;\r\n                        computeFields(prevEvent, prevprevEvent, operation);\r\n                        computeFields(event_1, prevEvent, operation);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                event_1 = event_1.otherEvent;\r\n                next = prev = sweepLine.find(event_1);\r\n                if (prev && next) {\r\n                    if (prev !== begin)\r\n                        prev = sweepLine.prev(prev);\r\n                    else\r\n                        prev = null;\r\n                    next = sweepLine.next(next);\r\n                    sweepLine.remove(event_1);\r\n                    if (next && prev) {\r\n                        possibleIntersection(prev.key, next.key, eventQueue);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return sortedEvents;\r\n    }\n\n    /**\r\n     * @param  {Array.<SweepEvent>} sortedEvents\r\n     * @return {Array.<SweepEvent>}\r\n     */\r\n    function orderEvents(sortedEvents) {\r\n        var event, i, len, tmp;\r\n        var resultEvents = [];\r\n        for (i = 0, len = sortedEvents.length; i < len; i++) {\r\n            event = sortedEvents[i];\r\n            if ((event.left && event.inResult) ||\r\n                (!event.left && event.otherEvent.inResult)) {\r\n                resultEvents.push(event);\r\n            }\r\n        }\r\n        // Due to overlapping edges the resultEvents array can be not wholly sorted\r\n        var sorted = false;\r\n        while (!sorted) {\r\n            sorted = true;\r\n            for (i = 0, len = resultEvents.length; i < len; i++) {\r\n                if ((i + 1) < len &&\r\n                    compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\r\n                    tmp = resultEvents[i];\r\n                    resultEvents[i] = resultEvents[i + 1];\r\n                    resultEvents[i + 1] = tmp;\r\n                    sorted = false;\r\n                }\r\n            }\r\n        }\r\n        for (i = 0, len = resultEvents.length; i < len; i++) {\r\n            event = resultEvents[i];\r\n            event.pos = i;\r\n        }\r\n        // imagine, the right event is found in the beginning of the queue,\r\n        // when his left counterpart is not marked yet\r\n        for (i = 0, len = resultEvents.length; i < len; i++) {\r\n            event = resultEvents[i];\r\n            if (!event.left) {\r\n                tmp = event.pos;\r\n                event.pos = event.otherEvent.pos;\r\n                event.otherEvent.pos = tmp;\r\n            }\r\n        }\r\n        return resultEvents;\r\n    }\r\n    /**\r\n     * @param  {Number} pos\r\n     * @param  {Array.<SweepEvent>} resultEvents\r\n     * @param  {Object>}    processed\r\n     * @return {Number}\r\n     */\r\n    function nextPos(pos, resultEvents, processed, origIndex) {\r\n        var p, p1;\r\n        var newPos = pos + 1;\r\n        var length = resultEvents.length;\r\n        p = resultEvents[pos].point;\r\n        if (newPos < length)\r\n            p1 = resultEvents[newPos].point;\r\n        // while in range and not the current one by value\r\n        while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\r\n            if (!processed[newPos]) {\r\n                return newPos;\r\n            }\r\n            else {\r\n                newPos++;\r\n            }\r\n            p1 = resultEvents[newPos].point;\r\n        }\r\n        newPos = pos - 1;\r\n        while (processed[newPos] && newPos >= origIndex) {\r\n            newPos--;\r\n        }\r\n        return newPos;\r\n    }\r\n    /**\r\n     * @param  {Array.<SweepEvent>} sortedEvents\r\n     * @return {Array.<*>} polygons\r\n     */\r\n    function connectEdges(sortedEvents, operation) {\r\n        var i, len;\r\n        var resultEvents = orderEvents(sortedEvents);\r\n        // \"false\"-filled array\r\n        var processed = {};\r\n        var result = [];\r\n        var event;\r\n        for (i = 0, len = resultEvents.length; i < len; i++) {\r\n            if (processed[i])\r\n                continue;\r\n            var contour = [[]];\r\n            if (!resultEvents[i].isExteriorRing) {\r\n                if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\r\n                    result.push(contour);\r\n                }\r\n                else if (result.length === 0) {\r\n                    result.push([[]]);\r\n                }\r\n                else {\r\n                    result[result.length - 1].push(contour[0]);\r\n                }\r\n            }\r\n            else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\r\n                result[result.length - 1].push(contour[0]);\r\n            }\r\n            else {\r\n                result.push(contour);\r\n            }\r\n            var ringId = result.length - 1;\r\n            var pos = i;\r\n            var initial = resultEvents[i].point;\r\n            contour[0].push(initial);\r\n            while (pos >= i) {\r\n                event = resultEvents[pos];\r\n                processed[pos] = true;\r\n                if (event.left) {\r\n                    event.resultInOut = false;\r\n                    event.contourId = ringId;\r\n                }\r\n                else {\r\n                    event.otherEvent.resultInOut = true;\r\n                    event.otherEvent.contourId = ringId;\r\n                }\r\n                pos = event.pos;\r\n                processed[pos] = true;\r\n                contour[0].push(resultEvents[pos].point);\r\n                pos = nextPos(pos, resultEvents, processed, i);\r\n            }\r\n            pos = pos === -1 ? i : pos;\r\n            event = resultEvents[pos];\r\n            processed[pos] = processed[event.pos] = true;\r\n            event.otherEvent.resultInOut = true;\r\n            event.otherEvent.contourId = ringId;\r\n        }\r\n        // Handle if the result is a polygon (eg not multipoly)\r\n        // Commented it again, let's see what do we mean by that\r\n        // if (result.length === 1) result = result[0];\r\n        return result;\r\n    }\n\n    class TinyQueue {\n        constructor(data = [], compare = defaultCompare) {\n            this.data = data;\n            this.length = this.data.length;\n            this.compare = compare;\n\n            if (this.length > 0) {\n                for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n            }\n        }\n\n        push(item) {\n            this.data.push(item);\n            this.length++;\n            this._up(this.length - 1);\n        }\n\n        pop() {\n            if (this.length === 0) return undefined;\n\n            const top = this.data[0];\n            const bottom = this.data.pop();\n            this.length--;\n\n            if (this.length > 0) {\n                this.data[0] = bottom;\n                this._down(0);\n            }\n\n            return top;\n        }\n\n        peek() {\n            return this.data[0];\n        }\n\n        _up(pos) {\n            const {data, compare} = this;\n            const item = data[pos];\n\n            while (pos > 0) {\n                const parent = (pos - 1) >> 1;\n                const current = data[parent];\n                if (compare(item, current) >= 0) break;\n                data[pos] = current;\n                pos = parent;\n            }\n\n            data[pos] = item;\n        }\n\n        _down(pos) {\n            const {data, compare} = this;\n            const halfLength = this.length >> 1;\n            const item = data[pos];\n\n            while (pos < halfLength) {\n                let left = (pos << 1) + 1;\n                let best = data[left];\n                const right = left + 1;\n\n                if (right < this.length && compare(data[right], best) < 0) {\n                    left = right;\n                    best = data[right];\n                }\n                if (compare(best, item) >= 0) break;\n\n                data[pos] = best;\n                pos = left;\n            }\n\n            data[pos] = item;\n        }\n    }\n\n    function defaultCompare(a, b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var contourId = 0;\r\n    function processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\r\n        var i, len, s1, s2, e1, e2;\r\n        for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\r\n            s1 = contourOrHole[i];\r\n            s2 = contourOrHole[i + 1];\r\n            e1 = new SweepEvent(s1, false, null, isSubject);\r\n            e2 = new SweepEvent(s2, false, e1, isSubject);\r\n            e1.otherEvent = e2;\r\n            if (s1[0] === s2[0] && s1[1] === s2[1]) {\r\n                continue; // skip collapsed edges, or it breaks\r\n            }\r\n            e1.contourId = e2.contourId = depth;\r\n            if (!isExteriorRing) {\r\n                e1.isExteriorRing = false;\r\n                e2.isExteriorRing = false;\r\n            }\r\n            if (compareEvents(e1, e2) > 0) {\r\n                e2.left = true;\r\n            }\r\n            else {\r\n                e1.left = true;\r\n            }\r\n            var x = s1[0], y = s1[1];\r\n            bbox[0] = min(bbox[0], x);\r\n            bbox[1] = min(bbox[1], y);\r\n            bbox[2] = max(bbox[2], x);\r\n            bbox[3] = max(bbox[3], y);\r\n            // Pushing it so the queue is sorted from left to right,\r\n            // with object on the left having the highest priority.\r\n            Q.push(e1);\r\n            Q.push(e2);\r\n        }\r\n    }\r\n    function fillQueue(subject, clipping, sbbox, cbbox, operation) {\r\n        var eventQueue = new TinyQueue(undefined, compareEvents);\r\n        var polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\r\n        for (i = 0, ii = subject.length; i < ii; i++) {\r\n            polygonSet = subject[i];\r\n            for (j = 0, jj = polygonSet.length; j < jj; j++) {\r\n                isExteriorRing = j === 0;\r\n                if (isExteriorRing)\r\n                    contourId++;\r\n                processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\r\n            }\r\n        }\r\n        for (i = 0, ii = clipping.length; i < ii; i++) {\r\n            polygonSet = clipping[i];\r\n            for (j = 0, jj = polygonSet.length; j < jj; j++) {\r\n                isExteriorRing = j === 0;\r\n                if (operation === DIFFERENCE)\r\n                    isExteriorRing = false;\r\n                if (isExteriorRing)\r\n                    contourId++;\r\n                processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\r\n            }\r\n        }\r\n        return eventQueue;\r\n    }\n\n    var EMPTY = [];\r\n    function trivialOperation(subject, clipping, operation) {\r\n        var result = null;\r\n        if (subject.length * clipping.length === 0) {\r\n            if (operation === INTERSECTION) {\r\n                result = EMPTY;\r\n            }\r\n            else if (operation === DIFFERENCE) {\r\n                result = subject;\r\n            }\r\n            else if (operation === UNION ||\r\n                operation === XOR) {\r\n                result = (subject.length === 0) ? clipping : subject;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\r\n        var result = null;\r\n        if (sbbox[0] > cbbox[2] ||\r\n            cbbox[0] > sbbox[2] ||\r\n            sbbox[1] > cbbox[3] ||\r\n            cbbox[1] > sbbox[3]) {\r\n            if (operation === INTERSECTION) {\r\n                result = EMPTY;\r\n            }\r\n            else if (operation === DIFFERENCE) {\r\n                result = subject;\r\n            }\r\n            else if (operation === UNION ||\r\n                operation === XOR) {\r\n                result = subject.concat(clipping);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function boolean(subjectGeometry, clippingGeometry, operation) {\r\n        if (typeof subjectGeometry[0][0][0] === 'number') {\r\n            subjectGeometry = [subjectGeometry];\r\n        }\r\n        if (typeof clippingGeometry[0][0][0] === 'number') {\r\n            clippingGeometry = [clippingGeometry];\r\n        }\r\n        var subject = subjectGeometry;\r\n        var clipping = clippingGeometry;\r\n        var trivial = trivialOperation(subject, clipping, operation);\r\n        if (trivial) {\r\n            return trivial === EMPTY ? null : trivial;\r\n        }\r\n        var sbbox = [Infinity, Infinity, -Infinity, -Infinity];\r\n        var cbbox = [Infinity, Infinity, -Infinity, -Infinity];\r\n        //console.time('fill queue');\r\n        var eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\r\n        //console.timeEnd('fill queue');\r\n        trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\r\n        if (trivial) {\r\n            return trivial === EMPTY ? null : trivial;\r\n        }\r\n        //console.time('subdivide edges');\r\n        var sortedEvents = subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation);\r\n        //console.timeEnd('subdivide edges');\r\n        //console.time('connect vertices');\r\n        var result = connectEdges(sortedEvents, operation);\r\n        //console.timeEnd('connect vertices');\r\n        return result;\r\n    }\n\n    function union(subject, clipping) {\r\n        return boolean(subject, clipping, UNION);\r\n    }\r\n    function diff(subject, clipping) {\r\n        return boolean(subject, clipping, DIFFERENCE);\r\n    }\r\n    function xor(subject, clipping) {\r\n        return boolean(subject, clipping, XOR);\r\n    }\r\n    function intersection$1(subject, clipping) {\r\n        return boolean(subject, clipping, INTERSECTION);\r\n    }\r\n    /**\r\n     * @enum {Number}\r\n     */\r\n    var operations = { UNION: UNION, DIFFERENCE: DIFFERENCE, INTERSECTION: INTERSECTION, XOR: XOR };\n\n    exports.diff = diff;\n    exports.intersection = intersection$1;\n    exports.operations = operations;\n    exports.union = union;\n    exports.xor = xor;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=martinez.umd.js.map\n","import './coordinates';\nimport './polygoncontrol';\nimport './booleanopcontrol';\nimport martinez from '../../dist/martinez.umd';\n//var martinez = require('../../dist/martinez.min');\n\nlet mode = window.location.hash.substring(1);\nlet path = '../test/fixtures/';\nconst ext  = '.geojson';\nlet file;\n\nlet files = [\n  'asia', 'trapezoid-box', 'canada', 'horseshoe', 'hourglasses', 'overlap_y',\n  'polygon_trapezoid_edge_overlap', 'touching_boxes', 'two_pointed_triangles',\n  'hole_cut', 'overlapping_segments', 'overlap_loop', 'disjoint_boxes'\n];\n\nswitch (mode) {\n  case 'geo':\n    file = 'asia.geojson';\n    break;\n  case 'states':\n    file = 'states_source.geojson';\n    break;\n  case 'trapezoid':\n    file = 'trapezoid-box.geojson';\n    break;\n  case 'canada':\n    file = 'canada.geojson';\n    break;\n  case 'horseshoe':\n    file = 'horseshoe.geojson';\n    break;\n  case 'hourglasses':\n    file = 'hourglasses.geojson';\n    break;\n  case 'edge_overlap':\n    file = 'polygon_trapezoid_edge_overlap.geojson';\n    break;\n  case 'touching_boxes':\n    file = 'touching_boxes.geojson';\n    break;\n  case 'triangles':\n    file = 'two_pointed_triangles.geojson';\n    break;\n  case 'holecut':\n    file = 'hole_cut.geojson';\n    break;\n  case 'overlapping_segments':\n    file = 'overlapping_segments.geojson';\n    break;\n  case 'overlap_loop':\n    file = 'overlap_loop.geojson';\n    break;\n  case 'overlap_y':\n    file = 'overlap_y.geojson';\n    break;\n  case 'overlap_two':\n    file = 'overlap_two.geojson';\n    break;\n  case 'disjoint_boxes':\n    file = 'disjoint_boxes.geojson';\n    break;\n  case 'polygons_edge_overlap':\n    file = 'polygons_edge_overlap.geojson';\n    break;\n  case 'vertical_boxes':\n    file = 'vertical_boxes.geojson';\n    break;\n  case 'collapsed':\n    file = 'collapsed.geojson';\n    break;\n  case 'fatal1':\n    file = 'fatal1.geojson';\n    break;\n  case 'fatal2':\n    file = 'fatal2.geojson';\n    break;\n  case 'fatal3':\n    file = 'fatal3.geojson';\n    break;\n  case 'fatal4':\n    file = 'fatal4.geojson';\n    break;\n  case 'rectangles':\n    file = 'rectangles.geojson';\n    break;\n  default:\n    file = 'hole_hole.geojson';\n    break;\n}\n\nconsole.log(mode);\n\n\nvar OPERATIONS = {\n  INTERSECTION: 0,\n  UNION:        1,\n  DIFFERENCE:   2,\n  XOR:          3\n};\n\nvar div = document.createElement('div');\ndiv.id = 'image-map';\ndiv.style.width = div.style.height = '100%';\ndocument.body.appendChild(div);\n\n// create the slippy map\nvar map = window.map = L.map('image-map', {\n  minZoom: 1,\n  maxZoom: 20,\n  center: [0, 0],\n  zoom: 2,\n  crs: mode === 'geo' ? L.CRS.EPSG4326 : L.extend({}, L.CRS.Simple, {\n    transformation: new L.Transformation(1/8, 0, -1/8, 0)\n  }),\n  editable: true\n});\n\nmap.addControl(new L.NewPolygonControl({\n  callback: map.editTools.startPolygon\n}));\nmap.addControl(new L.Coordinates());\nmap.addControl(new L.BooleanControl({\n  callback: run,\n  clear: clear\n}));\n\nvar drawnItems = window.drawnItems = L.geoJson().addTo(map);\n\nfunction loadData(path) {\n  console.log(path);\n  fetch(path)\n    .then((r) => r.json())\n    .then(setData);\n}\n\nfunction setData(json) {\n  clear();\n  drawnItems.addData(json);\n  map.fitBounds(drawnItems.getBounds().pad(0.05), { animate: false });\n}\n\nwindow.setData = setData;\n\nfunction clear() {\n  drawnItems.clearLayers();\n  results.clearLayers();\n}\n\nvar reader = new jsts.io.GeoJSONReader();\nvar writer = new jsts.io.GeoJSONWriter();\n\nfunction run (op) {\n  var layers = drawnItems.getLayers();\n  if (layers.length < 2) return;\n  var subject = layers[0].toGeoJSON();\n  var clipping = layers[1].toGeoJSON();\n\n  //console.log('input', subject, clipping, op);\n\n  subject  = JSON.parse(JSON.stringify(subject));\n  clipping = JSON.parse(JSON.stringify(clipping));\n\n  var operation;\n  if (op === OPERATIONS.INTERSECTION) {\n    operation = martinez.intersection;\n  } else if (op === OPERATIONS.UNION) {\n    operation = martinez.union;\n  } else if (op === OPERATIONS.DIFFERENCE) {\n    operation = martinez.diff;\n  } else if (op === 5) { // B - A\n    operation = martinez.diff;\n\n    var temp = subject;\n    subject  = clipping;\n    clipping = temp;\n  } else {\n    operation = martinez.xor;\n  }\n\n  console.time('martinez');\n  var result = operation(subject.geometry.coordinates, clipping.geometry.coordinates);\n  console.timeEnd('martinez');\n\n  //if (op === OPERATIONS.UNION) result = result[0];\n  console.log('result', result);\n  // console.log(JSON.stringify(result))\n  results.clearLayers();\n\n  if (result !== null) {\n    results.addData({\n      'type': 'Feature',\n      'geometry': {\n        'type': 'MultiPolygon',\n        'coordinates': result\n      }\n    });\n\n    setTimeout(function() {\n      console.time('jsts');\n      var s = reader.read(subject);\n      var c = reader.read(clipping);\n      var res;\n      if (op === OPERATIONS.INTERSECTION) {\n        res = s.geometry.intersection(c.geometry);\n      } else if (op === OPERATIONS.UNION) {\n        res = s.geometry.union(c.geometry);\n      } else if (op === OPERATIONS.DIFFERENCE) {\n        res = s.geometry.difference(c.geometry);\n      } else {\n        res = s.geometry.symDifference(c.geometry);\n      }\n      res = writer.write(res);\n      console.timeEnd('jsts');\n      console.log(res);\n    }, 500);\n  }\n}\n\n//drawnItems.addData(oneInside);\n//drawnItems.addData(twoPointedTriangles);\n//drawnItems.addData(selfIntersecting);\n//drawnItems.addData(holes);\n//drawnItems.addData(data);\n\nmap.on('editable:created', function(evt) {\n  drawnItems.addLayer(evt.layer);\n  evt.layer.on('click', function(e) {\n    if ((e.originalEvent.ctrlKey || e.originalEvent.metaKey) && this.editEnabled()) {\n      this.editor.newHole(e.latlng);\n    }\n  });\n});\n\nvar results = window.results = L.geoJson(null, {\n  style: function(feature) {\n    return {\n      color: 'red',\n      weight: 1\n    };\n  }\n}).addTo(map);\n\nloadData(path + file);\n"],"names":["L","this"],"mappings":"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"}