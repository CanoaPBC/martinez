{"version":3,"file":"bundle.js","sources":["coordinates.js","polygoncontrol.js","booleanopcontrol.js","../../dist/martinez.umd.js","index.js"],"sourcesContent":["import L from 'leaflet';\n\nL.Coordinates = L.Control.extend({\n  options: {\n    position: 'bottomright'\n  },\n\n  onAdd: function(map) {\n    this._container = L.DomUtil.create('div', 'leaflet-bar');\n    this._container.style.background = '#ffffff';\n    map.on('mousemove', this._onMouseMove, this);\n    return this._container;\n  },\n\n  _onMouseMove: function(e) {\n    this._container.innerHTML = '<span style=\"padding: 5px\">' +\n      e.latlng.lng.toFixed(3) + ', ' + e.latlng.lat.toFixed(3) + '</span>';\n  }\n\n});\n","import L from 'leaflet';\n\nL.EditControl = L.Control.extend({\n\n  options: {\n    position: 'topleft',\n    callback: null,\n    kind: '',\n    html: ''\n  },\n\n  onAdd: function (map) {\n    var container = L.DomUtil.create('div', 'leaflet-control leaflet-bar'),\n        link = L.DomUtil.create('a', '', container);\n\n    link.href = '#';\n    link.title = 'Create a new ' + this.options.kind;\n    link.innerHTML = this.options.html;\n    L.DomEvent.on(link, 'click', L.DomEvent.stop)\n              .on(link, 'click', function () {\n                window.LAYER = this.options.callback.call(map.editTools);\n              }, this);\n\n    return container;\n  }\n\n});\n\nL.NewPolygonControl = L.EditControl.extend({\n  options: {\n    position: 'topleft',\n    kind: 'polygon',\n    html: 'â–°'\n  }\n});\n","import L from 'leaflet';\n\nL.BooleanControl = L.Control.extend({\n  options: {\n    position: 'topright'\n  },\n\n  onAdd: function(map) {\n    var container = this._container = L.DomUtil.create('div', 'leaflet-bar');\n    this._container.style.background = '#ffffff';\n    this._container.style.padding = '10px';\n    container.innerHTML = [\n      '<form>',\n        '<ul style=\"list-style:none; padding-left: 0\">',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"0\" checked />',  ' Intersection', '</label>', '</li>',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"1\" />',  ' Union', '</label>', '</li>',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"2\" />',  ' Difference A - B', '</label>', '</li>',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"5\" />',  ' Difference B - A', '</label>', '</li>',\n          '<li>','<label>', '<input type=\"radio\" name=\"op\" value=\"3\" />',  ' Xor', '</label>', '</li>',\n        '</ul>',\n        '<input type=\"submit\" value=\"Run\">', '<input name=\"clear\" type=\"button\" value=\"Clear layers\">',\n      '</form>'].join('');\n    var form = container.querySelector('form');\n    L.DomEvent\n      .on(form, 'submit', function (evt) {\n        L.DomEvent.stop(evt);\n        var radios = Array.prototype.slice.call(\n          form.querySelectorAll('input[type=radio]'));\n        for (var i = 0, len = radios.length; i < len; i++) {\n          if (radios[i].checked) {\n            this.options.callback(parseInt(radios[i].value));\n            break;\n          }\n        }\n      }, this)\n      .on(form['clear'], 'click', function(evt) {\n        L.DomEvent.stop(evt);\n        this.options.clear();\n      }, this);\n\n    L.DomEvent\n      .disableClickPropagation(this._container)\n      .disableScrollPropagation(this._container);\n    return this._container;\n  }\n\n});\n","/**\n * martinez-polygon-clipping v0.6.0\n * Martinez polygon clipping algorithm, does boolean operation on polygons (multipolygons, polygons with holes etc): intersection, union, difference, xor\n *\n * @author Alex Milevski <info@w8r.name>\n * @license MIT\n * @preserve\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global['martinez-polygon-clipping'] = {}));\n}(this, function (exports) { 'use strict';\n\n  var INTERSECTION = 0;\r\n  var UNION = 1;\r\n  var DIFFERENCE = 2;\r\n  var XOR = 3;\r\n  var Operation;\r\n  (function (Operation) {\r\n      Operation[Operation[\"INTERSECTION\"] = 0] = \"INTERSECTION\";\r\n      Operation[Operation[\"UNION\"] = 1] = \"UNION\";\r\n      Operation[Operation[\"DIFFERENCE\"] = 2] = \"DIFFERENCE\";\r\n      Operation[Operation[\"XOR\"] = 3] = \"XOR\";\r\n  })(Operation || (Operation = {}));\r\n  //# sourceMappingURL=operation.js.map\n\n  var PRECISION = 12;\r\n  var EMPTY = [];\r\n  var EPS = Math.pow(10, -PRECISION);\r\n  var E_LIMIT = Math.pow(10, PRECISION);\r\n  //# sourceMappingURL=constants.js.map\n\n  var TinyQueue = function TinyQueue(data, compare) {\n      if ( data === void 0 ) data = [];\n      if ( compare === void 0 ) compare = defaultCompare;\n\n      this.data = data;\n      this.length = this.data.length;\n      this.compare = compare;\n\n      if (this.length > 0) {\n          for (var i = (this.length >> 1) - 1; i >= 0; i--) { this._down(i); }\n      }\n  };\n\n  TinyQueue.prototype.push = function push (item) {\n      this.data.push(item);\n      this.length++;\n      this._up(this.length - 1);\n  };\n\n  TinyQueue.prototype.pop = function pop () {\n      if (this.length === 0) { return undefined; }\n\n      var top = this.data[0];\n      var bottom = this.data.pop();\n      this.length--;\n\n      if (this.length > 0) {\n          this.data[0] = bottom;\n          this._down(0);\n      }\n\n      return top;\n  };\n\n  TinyQueue.prototype.peek = function peek () {\n      return this.data[0];\n  };\n\n  TinyQueue.prototype._up = function _up (pos) {\n      var ref = this;\n          var data = ref.data;\n          var compare = ref.compare;\n      var item = data[pos];\n\n      while (pos > 0) {\n          var parent = (pos - 1) >> 1;\n          var current = data[parent];\n          if (compare(item, current) >= 0) { break; }\n          data[pos] = current;\n          pos = parent;\n      }\n\n      data[pos] = item;\n  };\n\n  TinyQueue.prototype._down = function _down (pos) {\n      var ref = this;\n          var data = ref.data;\n          var compare = ref.compare;\n      var halfLength = this.length >> 1;\n      var item = data[pos];\n\n      while (pos < halfLength) {\n          var left = (pos << 1) + 1;\n          var best = data[left];\n          var right = left + 1;\n\n          if (right < this.length && compare(data[right], best) < 0) {\n              left = right;\n              best = data[right];\n          }\n          if (compare(best, item) >= 0) { break; }\n\n          data[pos] = best;\n          pos = left;\n      }\n\n      data[pos] = item;\n  };\n\n  function defaultCompare(a, b) {\n      return a < b ? -1 : a > b ? 1 : 0;\n  }\n\n  var NORMAL = 0;\r\n  var NON_CONTRIBUTING = 1;\r\n  var SAME_TRANSITION = 2;\r\n  var DIFFERENT_TRANSITION = 3;\r\n  //# sourceMappingURL=edge_type.js.map\n\n  var SweepEvent = /** @class */ (function () {\r\n      function SweepEvent(point, left, otherEvent, isSubject, edgeType) {\r\n          if (edgeType === void 0) { edgeType = NORMAL; }\r\n          // transition flags\r\n          this.inOut = false;\r\n          this.otherInOut = false;\r\n          this.prevInResult = null;\r\n          // Does event belong to result?\r\n          this.inResult = false;\r\n          // connection step\r\n          this.resultInOut = false;\r\n          this.isExteriorRing = true;\r\n          this.contourId = -1;\r\n          // Is left endpoint?\r\n          this.left = left;\r\n          this.point = point;\r\n          // Other edge reference\r\n          this.otherEvent = otherEvent;\r\n          // Belongs to source or clipping polygon\r\n          this.isSubject = isSubject;\r\n          // Edge contribution type\r\n          this.type = edgeType;\r\n      }\r\n      SweepEvent.prototype.isVertical = function () {\r\n          return this.point[0] === this.otherEvent.point[0];\r\n      };\r\n      SweepEvent.prototype.clone = function () {\r\n          var copy = new SweepEvent(this.point, this.left, this.otherEvent, this.isSubject, this.type);\r\n          copy.inResult = this.inResult;\r\n          copy.prevInResult = this.prevInResult;\r\n          copy.isExteriorRing = this.isExteriorRing;\r\n          copy.inOut = this.inOut;\r\n          copy.otherInOut = this.otherInOut;\r\n          return copy;\r\n      };\r\n      return SweepEvent;\r\n  }());\r\n  function isBelow(e, p) {\r\n      var p0 = e.point, p1 = e.otherEvent.point;\r\n      return e.left\r\n          ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\r\n          // signedArea(this.point, this.otherEvent.point, p) > 0 :\r\n          : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\r\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\r\n  }\r\n  //# sourceMappingURL=sweep_event.js.map\n\n  /**\r\n   * Signed area of the triangle (p0, p1, p2)\r\n   */\r\n  function signedArea(p0, p1, p2) {\r\n      return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\r\n  }\r\n  //# sourceMappingURL=signed_area.js.map\n\n  /**\r\n   * @param  {SweepEvent} e1\r\n   * @param  {SweepEvent} e2\r\n   * @return {Number}\r\n   */\r\n  function compareEvents(e1, e2) {\r\n      var p1 = e1.point;\r\n      var p2 = e2.point;\r\n      // Different x-coordinate\r\n      if (p1[0] > p2[0])\r\n          return 1;\r\n      if (p1[0] < p2[0])\r\n          return -1;\r\n      // Different points, but same x-coordinate\r\n      // Event with lower y-coordinate is processed first\r\n      if (p1[1] !== p2[1])\r\n          return p1[1] > p2[1] ? 1 : -1;\r\n      // Same coordinates, but one is a left endpoint and the other is\r\n      // a right endpoint. The right endpoint is processed first\r\n      if (e1.left !== e2.left)\r\n          return e1.left ? 1 : -1;\r\n      // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\r\n      // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\r\n      // Same coordinates, both events\r\n      // are left endpoints or right endpoints.\r\n      // not collinear\r\n      if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\r\n          // the event associate to the bottom segment is processed first\r\n          return (!isBelow(e1, e2.otherEvent.point)) ? 1 : -1;\r\n      }\r\n      return (!e1.isSubject && e2.isSubject) ? 1 : -1;\r\n  }\r\n  //# sourceMappingURL=compare_events.js.map\n\n  var contourId = 0;\r\n  function processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\r\n      var i, len, s1, s2, e1, e2;\r\n      for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\r\n          s1 = contourOrHole[i];\r\n          s2 = contourOrHole[i + 1];\r\n          e1 = new SweepEvent(s1, false, undefined, isSubject);\r\n          e2 = new SweepEvent(s2, false, e1, isSubject);\r\n          e1.otherEvent = e2;\r\n          if (s1[0] === s2[0] && s1[1] === s2[1]) {\r\n              continue; // skip collapsed edges, or it breaks\r\n          }\r\n          e1.contourId = e2.contourId = depth;\r\n          if (!isExteriorRing) {\r\n              e1.isExteriorRing = false;\r\n              e2.isExteriorRing = false;\r\n          }\r\n          if (compareEvents(e1, e2) > 0)\r\n              e2.left = true;\r\n          else\r\n              e1.left = true;\r\n          var x = s1[0], y = s1[1];\r\n          if (x < bbox[0])\r\n              bbox[0] = x;\r\n          if (y < bbox[1])\r\n              bbox[1] = y;\r\n          if (x > bbox[2])\r\n              bbox[2] = x;\r\n          if (y > bbox[3])\r\n              bbox[3] = x;\r\n          // Pushing it so the queue is sorted from left to right,\r\n          // with object on the left having the highest priority.\r\n          Q.push(e1);\r\n          Q.push(e2);\r\n      }\r\n  }\r\n  function fillQueue(subject, clipping, sbbox, cbbox, operation) {\r\n      var Q = new TinyQueue(undefined, compareEvents);\r\n      var polygonSet, isExteriorRing, i, ii, j, jj;\r\n      for (i = 0, ii = subject.length; i < ii; i++) {\r\n          polygonSet = subject[i];\r\n          for (j = 0, jj = polygonSet.length; j < jj; j++) {\r\n              isExteriorRing = j === 0;\r\n              if (isExteriorRing)\r\n                  contourId++;\r\n              processPolygon(polygonSet[j], true, contourId, Q, sbbox, isExteriorRing);\r\n          }\r\n      }\r\n      for (i = 0, ii = clipping.length; i < ii; i++) {\r\n          polygonSet = clipping[i];\r\n          for (j = 0, jj = polygonSet.length; j < jj; j++) {\r\n              isExteriorRing = j === 0;\r\n              if (operation === DIFFERENCE)\r\n                  isExteriorRing = false;\r\n              if (isExteriorRing)\r\n                  contourId++;\r\n              processPolygon(polygonSet[j], false, contourId, Q, cbbox, isExteriorRing);\r\n          }\r\n      }\r\n      return Q;\r\n  }\r\n  //# sourceMappingURL=fill_queue.js.map\n\n  /**\n   * splaytree v3.0.0\n   * Fast Splay tree for Node and browser\n   *\n   * @author Alexander Milevski <info@w8r.name>\n   * @license MIT\n   * @preserve\n   */\n\n  var Node = function Node(key, data) {\r\n      this.next = null;\r\n      this.key = key;\r\n      this.data = data;\r\n      this.left = null;\r\n      this.right = null;\r\n  };\n\n  /* follows \"An implementation of top-down splaying\"\r\n   * by D. Sleator <sleator@cs.cmu.edu> March 1992\r\n   */\r\n  function DEFAULT_COMPARE(a, b) {\r\n      return a > b ? 1 : a < b ? -1 : 0;\r\n  }\r\n  /**\r\n   * Simple top down splay, not requiring i to be in the tree t.\r\n   */\r\n  function splay(i, t, comparator) {\r\n      var N = new Node(null, null);\r\n      var l = N;\r\n      var r = N;\r\n      while (true) {\r\n          var cmp = comparator(i, t.key);\r\n          //if (i < t.key) {\r\n          if (cmp < 0) {\r\n              if (t.left === null)\r\n                  { break; }\r\n              //if (i < t.left.key) {\r\n              if (comparator(i, t.left.key) < 0) {\r\n                  var y = t.left; /* rotate right */\r\n                  t.left = y.right;\r\n                  y.right = t;\r\n                  t = y;\r\n                  if (t.left === null)\r\n                      { break; }\r\n              }\r\n              r.left = t; /* link right */\r\n              r = t;\r\n              t = t.left;\r\n              //} else if (i > t.key) {\r\n          }\r\n          else if (cmp > 0) {\r\n              if (t.right === null)\r\n                  { break; }\r\n              //if (i > t.right.key) {\r\n              if (comparator(i, t.right.key) > 0) {\r\n                  var y$1 = t.right; /* rotate left */\r\n                  t.right = y$1.left;\r\n                  y$1.left = t;\r\n                  t = y$1;\r\n                  if (t.right === null)\r\n                      { break; }\r\n              }\r\n              l.right = t; /* link left */\r\n              l = t;\r\n              t = t.right;\r\n          }\r\n          else\r\n              { break; }\r\n      }\r\n      /* assemble */\r\n      l.right = t.left;\r\n      r.left = t.right;\r\n      t.left = N.right;\r\n      t.right = N.left;\r\n      return t;\r\n  }\r\n  function insert(i, data, t, comparator) {\r\n      var node = new Node(i, data);\r\n      if (t === null) {\r\n          node.left = node.right = null;\r\n          return node;\r\n      }\r\n      t = splay(i, t, comparator);\r\n      var cmp = comparator(i, t.key);\r\n      if (cmp < 0) {\r\n          node.left = t.left;\r\n          node.right = t;\r\n          t.left = null;\r\n      }\r\n      else if (cmp >= 0) {\r\n          node.right = t.right;\r\n          node.left = t;\r\n          t.right = null;\r\n      }\r\n      return node;\r\n  }\r\n  function split(key, v, comparator) {\r\n      var left = null;\r\n      var right = null;\r\n      if (v) {\r\n          v = splay(key, v, comparator);\r\n          var cmp = comparator(v.key, key);\r\n          if (cmp === 0) {\r\n              left = v.left;\r\n              right = v.right;\r\n          }\r\n          else if (cmp < 0) {\r\n              right = v.right;\r\n              v.right = null;\r\n              left = v;\r\n          }\r\n          else {\r\n              left = v.left;\r\n              v.left = null;\r\n              right = v;\r\n          }\r\n      }\r\n      return { left: left, right: right };\r\n  }\r\n  function merge(left, right, comparator) {\r\n      if (right === null)\r\n          { return left; }\r\n      if (left === null)\r\n          { return right; }\r\n      right = splay(left.key, right, comparator);\r\n      right.left = left;\r\n      return right;\r\n  }\r\n  /**\r\n   * Prints level of the tree\r\n   */\r\n  function printRow(root, prefix, isTail, out, printNode) {\r\n      if (root) {\r\n          out((\"\" + prefix + (isTail ? 'â””â”€â”€ ' : 'â”œâ”€â”€ ') + (printNode(root)) + \"\\n\"));\r\n          var indent = prefix + (isTail ? '    ' : 'â”‚   ');\r\n          if (root.left)\r\n              { printRow(root.left, indent, false, out, printNode); }\r\n          if (root.right)\r\n              { printRow(root.right, indent, true, out, printNode); }\r\n      }\r\n  }\r\n  var Tree = function Tree(comparator) {\n      if ( comparator === void 0 ) comparator = DEFAULT_COMPARE;\n\r\n      this._root = null;\r\n      this._size = 0;\r\n      this._comparator = comparator;\r\n  };\n\n  var prototypeAccessors = { size: { configurable: true },root: { configurable: true } };\r\n  /**\r\n   * Inserts a key, allows duplicates\r\n   */\r\n  Tree.prototype.insert = function insert$1 (key, data) {\r\n      this._size++;\r\n      return this._root = insert(key, data, this._root, this._comparator);\r\n  };\r\n  /**\r\n   * Adds a key, if it is not present in the tree\r\n   */\r\n  Tree.prototype.add = function add (key, data) {\r\n      var node = new Node(key, data);\r\n      if (this._root === null) {\r\n          node.left = node.right = null;\r\n          this._size++;\r\n          this._root = node;\r\n      }\r\n      var comparator = this._comparator;\r\n      var t = splay(key, this._root, comparator);\r\n      var cmp = comparator(key, t.key);\r\n      if (cmp === 0)\r\n          { this._root = t; }\r\n      else {\r\n          if (cmp < 0) {\r\n              node.left = t.left;\r\n              node.right = t;\r\n              t.left = null;\r\n          }\r\n          else if (cmp > 0) {\r\n              node.right = t.right;\r\n              node.left = t;\r\n              t.right = null;\r\n          }\r\n          this._size++;\r\n          this._root = node;\r\n      }\r\n      return this._root;\r\n  };\r\n  /**\r\n   * @param  {Key} key\r\n   * @return {Node|null}\r\n   */\r\n  Tree.prototype.remove = function remove (key) {\r\n      this._root = this._remove(key, this._root, this._comparator);\r\n  };\r\n  /**\r\n   * Deletes i from the tree if it's there\r\n   */\r\n  Tree.prototype._remove = function _remove (i, t, comparator) {\r\n      var x;\r\n      if (t === null)\r\n          { return null; }\r\n      t = splay(i, t, comparator);\r\n      var cmp = comparator(i, t.key);\r\n      if (cmp === 0) { /* found it */\r\n          if (t.left === null) {\r\n              x = t.right;\r\n          }\r\n          else {\r\n              x = splay(i, t.left, comparator);\r\n              x.right = t.right;\r\n          }\r\n          this._size--;\r\n          return x;\r\n      }\r\n      return t; /* It wasn't there */\r\n  };\r\n  /**\r\n   * Removes and returns the node with smallest key\r\n   */\r\n  Tree.prototype.pop = function pop () {\r\n      var node = this._root;\r\n      if (node) {\r\n          while (node.left)\r\n              { node = node.left; }\r\n          this._root = splay(node.key, this._root, this._comparator);\r\n          this._root = this._remove(node.key, this._root, this._comparator);\r\n          return { key: node.key, data: node.data };\r\n      }\r\n      return null;\r\n  };\r\n  /**\r\n   * Find without splaying\r\n   */\r\n  Tree.prototype.findStatic = function findStatic (key) {\r\n      var current = this._root;\r\n      var compare = this._comparator;\r\n      while (current) {\r\n          var cmp = compare(key, current.key);\r\n          if (cmp === 0)\r\n              { return current; }\r\n          else if (cmp < 0)\r\n              { current = current.left; }\r\n          else\r\n              { current = current.right; }\r\n      }\r\n      return null;\r\n  };\r\n  Tree.prototype.find = function find (key) {\r\n      if (this._root) {\r\n          this._root = splay(key, this._root, this._comparator);\r\n          if (this._comparator(key, this._root.key) !== 0)\r\n              { return null; }\r\n      }\r\n      return this._root;\r\n  };\r\n  Tree.prototype.contains = function contains (key) {\r\n      var current = this._root;\r\n      var compare = this._comparator;\r\n      while (current) {\r\n          var cmp = compare(key, current.key);\r\n          if (cmp === 0)\r\n              { return true; }\r\n          else if (cmp < 0)\r\n              { current = current.left; }\r\n          else\r\n              { current = current.right; }\r\n      }\r\n      return false;\r\n  };\r\n  Tree.prototype.forEach = function forEach (visitor, ctx) {\r\n      var current = this._root;\r\n      var Q = []; /* Initialize stack s */\r\n      var done = false;\r\n      while (!done) {\r\n          if (current !== null) {\r\n              Q.push(current);\r\n              current = current.left;\r\n          }\r\n          else {\r\n              if (Q.length !== 0) {\r\n                  current = Q.pop();\r\n                  visitor.call(ctx, current);\r\n                  current = current.right;\r\n              }\r\n              else\r\n                  { done = true; }\r\n          }\r\n      }\r\n      return this;\r\n  };\r\n  /**\r\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\r\n   */\r\n  Tree.prototype.range = function range (low, high, fn, ctx) {\r\n      var Q = [];\r\n      var compare = this._comparator;\r\n      var node = this._root;\r\n      var cmp;\r\n      while (Q.length !== 0 || node) {\r\n          if (node) {\r\n              Q.push(node);\r\n              node = node.left;\r\n          }\r\n          else {\r\n              node = Q.pop();\r\n              cmp = compare(node.key, high);\r\n              if (cmp > 0) {\r\n                  break;\r\n              }\r\n              else if (compare(node.key, low) >= 0) {\r\n                  if (fn.call(ctx, node))\r\n                      { return this; } // stop if smth is returned\r\n              }\r\n              node = node.right;\r\n          }\r\n      }\r\n      return this;\r\n  };\r\n  /**\r\n   * Returns array of keys\r\n   */\r\n  Tree.prototype.keys = function keys () {\r\n      var keys = [];\r\n      this.forEach(function (ref) {\n              var key = ref.key;\n\n              return keys.push(key);\n          });\r\n      return keys;\r\n  };\r\n  /**\r\n   * Returns array of all the data in the nodes\r\n   */\r\n  Tree.prototype.values = function values () {\r\n      var values = [];\r\n      this.forEach(function (ref) {\n              var data = ref.data;\n\n              return values.push(data);\n          });\r\n      return values;\r\n  };\r\n  Tree.prototype.min = function min () {\r\n      if (this._root)\r\n          { return this.minNode(this._root).key; }\r\n      return null;\r\n  };\r\n  Tree.prototype.max = function max () {\r\n      if (this._root)\r\n          { return this.maxNode(this._root).key; }\r\n      return null;\r\n  };\r\n  Tree.prototype.minNode = function minNode (t) {\n          if ( t === void 0 ) t = this._root;\n\r\n      if (t)\r\n          { while (t.left)\r\n              { t = t.left; } }\r\n      return t;\r\n  };\r\n  Tree.prototype.maxNode = function maxNode (t) {\n          if ( t === void 0 ) t = this._root;\n\r\n      if (t)\r\n          { while (t.right)\r\n              { t = t.right; } }\r\n      return t;\r\n  };\r\n  /**\r\n   * Returns node at given index\r\n   */\r\n  Tree.prototype.at = function at (index) {\r\n      var current = this._root;\r\n      var done = false;\r\n      var i = 0;\r\n      var Q = [];\r\n      while (!done) {\r\n          if (current) {\r\n              Q.push(current);\r\n              current = current.left;\r\n          }\r\n          else {\r\n              if (Q.length > 0) {\r\n                  current = Q.pop();\r\n                  if (i === index)\r\n                      { return current; }\r\n                  i++;\r\n                  current = current.right;\r\n              }\r\n              else\r\n                  { done = true; }\r\n          }\r\n      }\r\n      return null;\r\n  };\r\n  Tree.prototype.next = function next (d) {\r\n      var root = this._root;\r\n      var successor = null;\r\n      if (d.right) {\r\n          successor = d.right;\r\n          while (successor.left)\r\n              { successor = successor.left; }\r\n          return successor;\r\n      }\r\n      var comparator = this._comparator;\r\n      while (root) {\r\n          var cmp = comparator(d.key, root.key);\r\n          if (cmp === 0)\r\n              { break; }\r\n          else if (cmp < 0) {\r\n              successor = root;\r\n              root = root.left;\r\n          }\r\n          else\r\n              { root = root.right; }\r\n      }\r\n      return successor;\r\n  };\r\n  Tree.prototype.prev = function prev (d) {\r\n      var root = this._root;\r\n      var predecessor = null;\r\n      if (d.left !== null) {\r\n          predecessor = d.left;\r\n          while (predecessor.right)\r\n              { predecessor = predecessor.right; }\r\n          return predecessor;\r\n      }\r\n      var comparator = this._comparator;\r\n      while (root) {\r\n          var cmp = comparator(d.key, root.key);\r\n          if (cmp === 0)\r\n              { break; }\r\n          else if (cmp < 0)\r\n              { root = root.left; }\r\n          else {\r\n              predecessor = root;\r\n              root = root.right;\r\n          }\r\n      }\r\n      return predecessor;\r\n  };\r\n  Tree.prototype.clear = function clear () {\r\n      this._root = null;\r\n      this._size = 0;\r\n      return this;\r\n  };\r\n  Tree.prototype.toList = function toList$1 () {\r\n      return toList(this._root);\r\n  };\r\n  /**\r\n   * Bulk-load items. Both array have to be same size\r\n   */\r\n  Tree.prototype.load = function load (keys, values, presort) {\n          if ( values === void 0 ) values = [];\n          if ( presort === void 0 ) presort = false;\n\r\n      var size = keys.length;\r\n      var comparator = this._comparator;\r\n      // sort if needed\r\n      if (presort)\r\n          { sort(keys, values, 0, size - 1, comparator); }\r\n      if (this._root === null) { // empty tree\r\n          this._root = loadRecursive(keys, values, 0, size);\r\n          this._size = size;\r\n      }\r\n      else { // that re-builds the whole tree from two in-order traversals\r\n          var mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\r\n          size = this._size + size;\r\n          this._root = sortedListToBST({ head: mergedList }, 0, size);\r\n      }\r\n      return this;\r\n  };\r\n  Tree.prototype.isEmpty = function isEmpty () { return this._root === null; };\r\n  prototypeAccessors.size.get = function () { return this._size; };\r\n  prototypeAccessors.root.get = function () { return this._root; };\r\n  Tree.prototype.toString = function toString (printNode) {\n          if ( printNode === void 0 ) printNode = function (n) { return String(n.key); };\n\r\n      var out = [];\r\n      printRow(this._root, '', true, function (v) { return out.push(v); }, printNode);\r\n      return out.join('');\r\n  };\r\n  Tree.prototype.update = function update (key, newKey, newData) {\r\n      var comparator = this._comparator;\r\n      var ref = split(key, this._root, comparator);\n          var left = ref.left;\n          var right = ref.right;\r\n      if (comparator(key, newKey) < 0) {\r\n          right = insert(newKey, newData, right, comparator);\r\n      }\r\n      else {\r\n          left = insert(newKey, newData, left, comparator);\r\n      }\r\n      this._root = merge(left, right, comparator);\r\n  };\r\n  Tree.prototype.split = function split$1 (key) {\r\n      return split(key, this._root, this._comparator);\r\n  };\n\n  Object.defineProperties( Tree.prototype, prototypeAccessors );\r\n  function loadRecursive(keys, values, start, end) {\r\n      var size = end - start;\r\n      if (size > 0) {\r\n          var middle = start + Math.floor(size / 2);\r\n          var key = keys[middle];\r\n          var data = values[middle];\r\n          var node = new Node(key, data);\r\n          node.left = loadRecursive(keys, values, start, middle);\r\n          node.right = loadRecursive(keys, values, middle + 1, end);\r\n          return node;\r\n      }\r\n      return null;\r\n  }\r\n  function createList(keys, values) {\r\n      var head = new Node(null, null);\r\n      var p = head;\r\n      for (var i = 0; i < keys.length; i++) {\r\n          p = p.next = new Node(keys[i], values[i]);\r\n      }\r\n      p.next = null;\r\n      return head.next;\r\n  }\r\n  function toList(root) {\r\n      var current = root;\r\n      var Q = [];\r\n      var done = false;\r\n      var head = new Node(null, null);\r\n      var p = head;\r\n      while (!done) {\r\n          if (current) {\r\n              Q.push(current);\r\n              current = current.left;\r\n          }\r\n          else {\r\n              if (Q.length > 0) {\r\n                  current = p = p.next = Q.pop();\r\n                  current = current.right;\r\n              }\r\n              else\r\n                  { done = true; }\r\n          }\r\n      }\r\n      p.next = null; // that'll work even if the tree was empty\r\n      return head.next;\r\n  }\r\n  function sortedListToBST(list, start, end) {\r\n      var size = end - start;\r\n      if (size > 0) {\r\n          var middle = start + Math.floor(size / 2);\r\n          var left = sortedListToBST(list, start, middle);\r\n          var root = list.head;\r\n          root.left = left;\r\n          list.head = list.head.next;\r\n          root.right = sortedListToBST(list, middle + 1, end);\r\n          return root;\r\n      }\r\n      return null;\r\n  }\r\n  function mergeLists(l1, l2, compare) {\r\n      var head = new Node(null, null); // dummy\r\n      var p = head;\r\n      var p1 = l1;\r\n      var p2 = l2;\r\n      while (p1 !== null && p2 !== null) {\r\n          if (compare(p1.key, p2.key) < 0) {\r\n              p.next = p1;\r\n              p1 = p1.next;\r\n          }\r\n          else {\r\n              p.next = p2;\r\n              p2 = p2.next;\r\n          }\r\n          p = p.next;\r\n      }\r\n      if (p1 !== null) {\r\n          p.next = p1;\r\n      }\r\n      else if (p2 !== null) {\r\n          p.next = p2;\r\n      }\r\n      return head.next;\r\n  }\r\n  function sort(keys, values, left, right, compare) {\r\n      if (left >= right)\r\n          { return; }\r\n      var pivot = keys[(left + right) >> 1];\r\n      var i = left - 1;\r\n      var j = right + 1;\r\n      while (true) {\r\n          do\r\n              { i++; }\r\n          while (compare(keys[i], pivot) < 0);\r\n          do\r\n              { j--; }\r\n          while (compare(keys[j], pivot) > 0);\r\n          if (i >= j)\r\n              { break; }\r\n          var tmp = keys[i];\r\n          keys[i] = keys[j];\r\n          keys[j] = tmp;\r\n          tmp = values[i];\r\n          values[i] = values[j];\r\n          values[j] = tmp;\r\n      }\r\n      sort(keys, values, left, j, compare);\r\n      sort(keys, values, j + 1, right, compare);\r\n  }\n  //# sourceMappingURL=splay.esm.js.map\n\n  /**\r\n   * @param  {SweepEvent} event\r\n   * @param  {SweepEvent} prev\r\n   * @param  {Operation} operation\r\n   */\r\n  function computeFields(event, prev, operation) {\r\n      // compute inOut and otherInOut fields\r\n      if (prev === null) {\r\n          event.inOut = false;\r\n          event.otherInOut = true;\r\n          // previous line segment in sweepline belongs to the same polygon\r\n      }\r\n      else {\r\n          if (event.isSubject === prev.isSubject) {\r\n              event.inOut = !prev.inOut;\r\n              event.otherInOut = prev.otherInOut;\r\n              // previous line segment in sweepline belongs to the clipping polygon\r\n          }\r\n          else {\r\n              event.inOut = !prev.otherInOut;\r\n              event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\r\n          }\r\n          // compute prevInResult field\r\n          if (prev) {\r\n              event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\r\n                  ? prev.prevInResult : prev;\r\n          }\r\n      }\r\n      // check if the line segment belongs to the Boolean operation\r\n      event.inResult = inResult(event, operation);\r\n  }\r\n  /* eslint-disable indent */\r\n  function inResult(event, operation) {\r\n      switch (event.type) {\r\n          case NORMAL:\r\n              switch (operation) {\r\n                  case INTERSECTION:\r\n                      return !event.otherInOut;\r\n                  case UNION:\r\n                      return event.otherInOut;\r\n                  case DIFFERENCE:\r\n                      // return (event.isSubject && !event.otherInOut) ||\r\n                      //         (!event.isSubject && event.otherInOut);\r\n                      return (event.isSubject && event.otherInOut) ||\r\n                          (!event.isSubject && !event.otherInOut);\r\n                  case XOR:\r\n                      return true;\r\n              }\r\n              break;\r\n          case SAME_TRANSITION:\r\n              return operation === INTERSECTION || operation === UNION;\r\n          case DIFFERENT_TRANSITION:\r\n              return operation === DIFFERENCE;\r\n          case NON_CONTRIBUTING:\r\n              return false;\r\n      }\r\n      return false;\r\n  }\r\n  //# sourceMappingURL=compute_fields.js.map\n\n  function equals(a, b) {\r\n      if (a[0] === b[0]) {\r\n          if (a[1] === b[1]) {\r\n              return true;\r\n          }\r\n          else {\r\n              return false;\r\n          }\r\n      }\r\n      return false;\r\n  }\r\n  //# sourceMappingURL=types.js.map\n\n  function divideSegment(se, p, queue) {\r\n      var r = new SweepEvent(p, false, se, se.isSubject);\r\n      var l = new SweepEvent(p, true, se.otherEvent, se.isSubject);\r\n      /* eslint-disable no-console */\r\n      if (equals(se.point, se.otherEvent.point)) {\r\n          console.warn('what is that, a collapsed segment?', se);\r\n      }\r\n      /* eslint-enable no-console */\r\n      r.contourId = l.contourId = se.contourId;\r\n      // avoid a rounding error. The left event would be processed after the right event\r\n      if (compareEvents(l, se.otherEvent) > 0) {\r\n          se.otherEvent.left = true;\r\n          l.left = false;\r\n      }\r\n      // avoid a rounding error. The left event would be processed after the right event\r\n      // if (compareEvents(se, r) > 0) {}\r\n      se.otherEvent.otherEvent = l;\r\n      se.otherEvent = r;\r\n      queue.push(l);\r\n      queue.push(r);\r\n      return queue;\r\n  }\r\n  //# sourceMappingURL=divide_segment.js.map\n\n  function intersection(a0x, a0y, a1x, a1y, b0x, b0y, b1x, b1y, I) {\r\n      var vax = a1x - a0x;\r\n      var vay = a1y - a0y;\r\n      var vbx = b1x - b0x;\r\n      var vby = b1y - b0y;\r\n      // segments a0 + s * a1 for s in [0, 1], b0 + t * b1 for t in [0,1]\r\n      var ex = b0x - a0x;\r\n      var ey = b0y - a0y;\r\n      var kross = vax * vby - vay * vbx;\r\n      var sqrKross = kross * kross;\r\n      var sqrLen0 = vax * vax + vay * vay;\r\n      // const sqrLen1 = vbx * vbx + vby * vby;\r\n      if (sqrKross > 0) {\r\n          // lines of the segments are not parallel\r\n          var s = Math.round((ex * vby - ey * vbx) / kross * E_LIMIT) / E_LIMIT;\r\n          // intersection is outside the segment [a0, a1]\r\n          if (s < 0 || s > 1)\r\n              return 0;\r\n          // precision issues\r\n          // else if (s < EPS)     s = 0; \r\n          // else if (1 - s < EPS) s = 1;\r\n          var t = Math.round((ex * vay - ey * vax) / kross * E_LIMIT) / E_LIMIT;\r\n          // intersection is outside the segment [b0, b1]\r\n          if (t < 0 || t > 1)\r\n              return 0;\r\n          // precision issues\r\n          // else if (t < EPS)     t = 0; \r\n          // else if (1 - t < EPS) t = 1;\r\n          if (s === 0 || s === 1) {\r\n              // on an endpoint of line segment a\r\n              I[0][0] = a0x + s * vax;\r\n              I[0][1] = a0y + s * vay;\r\n              return 1;\r\n          }\r\n          if (t === 0 || t === 1) {\r\n              // on an endpoint of line segment b\r\n              I[0][0] = b0x + t * vbx;\r\n              I[0][1] = b0y + t * vby;\r\n              return 1;\r\n          }\r\n          // intersection of lines is a point on each segment\r\n          I[0][0] = a0x + s * vax;\r\n          I[0][1] = a0y + s * vay;\r\n          return 1;\r\n      }\r\n      // lines of the segments are parallel\r\n      var sqrLenE = ex * ex + ey * ey;\r\n      kross = ex * vay - ey * vax;\r\n      sqrKross = kross * kross;\r\n      if (sqrKross > EPS * sqrLen0 * sqrLenE) {\r\n          // lines of the segments are different\r\n          return 0;\r\n      }\r\n      // Lines of the segments are the same.  Need to test for overlap of\r\n      // segments.\r\n      var s0 = ((vax * ex) + (vay * ey)) / sqrLen0;\r\n      var s1 = s0 + ((vax * vbx) + (vay * vby)) / sqrLen0;\r\n      var smin = Math.min(s0, s1);\r\n      var smax = Math.max(s0, s1);\r\n      // this is, essentially, the FindIntersection acting on floats from\r\n      // Schneider & Eberly, just inlined into this function.\r\n      if (smin <= 1 && smax >= 0) {\r\n          // overlap on an end point\r\n          if (smin === 1) {\r\n              var c = Math.max(smin, 0);\r\n              I[0][0] = a0x + c * vax;\r\n              I[0][1] = a0y + c * vay;\r\n              return 1;\r\n          }\r\n          if (smax === 0) {\r\n              var c = Math.min(smax, 1);\r\n              I[0][0] = a0x + c * vax;\r\n              I[0][1] = a0y + c * vay;\r\n              return 1;\r\n          }\r\n          // There's overlap on a segment -- two points of intersection. Return both.\r\n          var cmin = Math.max(smin, 0), cmax = Math.min(smax, 1);\r\n          I[0][0] = a0x + cmin * vax;\r\n          I[0][1] = a0y + cmin * vay;\r\n          I[1][0] = a0x + cmax * vax;\r\n          I[1][1] = a0y + cmax * vay;\r\n          return 2;\r\n      }\r\n      return 0;\r\n  }\r\n  //# sourceMappingURL=intersection.js.map\n\n  var intersections = [[0, 0], [0, 0]];\r\n  function possibleIntersection(se1, se2, queue) {\r\n      // that disallows self-intersecting polygons,\r\n      // did cost us half a day, so I'll leave it\r\n      // out of respect\r\n      // if (se1.isSubject === se2.isSubject) return;\r\n      var a = se1.point, b = se1.otherEvent.point, c = se2.point, d = se2.otherEvent.point;\r\n      var nintersections = intersection(a[0], a[1], b[0], b[1], c[0], c[1], d[0], d[1], intersections);\r\n      if (nintersections === 0)\r\n          return 0; // no intersection\r\n      // the line segments intersect at an endpoint of both line segments\r\n      if ((nintersections === 1) &&\r\n          (equals(se1.point, se2.point) ||\r\n              equals(se1.otherEvent.point, se2.otherEvent.point))) {\r\n          return 0;\r\n      }\r\n      // best would be to skip it\r\n      if (nintersections === 2 && se1.isSubject === se2.isSubject) {\r\n          // if(se1.contourId === se2.contourId){\r\n          // console.warn('Edges of the same polygon overlap',\r\n          //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\r\n          // }\r\n          //throw new Error('Edges of the same polygon overlap');\r\n          return 0;\r\n      }\r\n      // The line segments associated to se1 and se2 intersect\r\n      if (nintersections === 1) {\r\n          // if the intersection point is not an endpoint of se1\r\n          if (!equals(se1.point, intersections[0]) && !equals(se1.otherEvent.point, intersections[0])) {\r\n              divideSegment(se1, intersections[0], queue);\r\n          }\r\n          // if the intersection point is not an endpoint of se2\r\n          if (!equals(se2.point, intersections[0]) && !equals(se2.otherEvent.point, intersections[0])) {\r\n              divideSegment(se2, intersections[0], queue);\r\n          }\r\n          return 1;\r\n      }\r\n      // The line segments associated to se1 and se2 overlap\r\n      var events = [];\r\n      var leftCoincide = false;\r\n      var rightCoincide = false;\r\n      if (equals(se1.point, se2.point)) {\r\n          leftCoincide = true; // linked\r\n      }\r\n      else if (compareEvents(se1, se2) === 1) {\r\n          events.push(se2, se1);\r\n      }\r\n      else {\r\n          events.push(se1, se2);\r\n      }\r\n      if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\r\n          rightCoincide = true;\r\n      }\r\n      else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\r\n          events.push(se2.otherEvent, se1.otherEvent);\r\n      }\r\n      else {\r\n          events.push(se1.otherEvent, se2.otherEvent);\r\n      }\r\n      if ((leftCoincide && rightCoincide) || leftCoincide) {\r\n          // both line segments are equal or share the left endpoint\r\n          se2.type = NON_CONTRIBUTING;\r\n          se1.type = (se2.inOut === se1.inOut)\r\n              ? SAME_TRANSITION : DIFFERENT_TRANSITION;\r\n          if (leftCoincide && !rightCoincide) {\r\n              // honestly no idea, but changing events selection from [2, 1]\r\n              // to [0, 1] fixes the overlapping self-intersecting polygons issue\r\n              divideSegment(events[1].otherEvent, events[0].point, queue);\r\n          }\r\n          return 2;\r\n      }\r\n      // the line segments share the right endpoint\r\n      if (rightCoincide) {\r\n          divideSegment(events[0], events[1].point, queue);\r\n          return 3;\r\n      }\r\n      // no line segment includes totally the other one\r\n      if (events[0] !== events[3].otherEvent) {\r\n          divideSegment(events[0], events[1].point, queue);\r\n          divideSegment(events[1], events[2].point, queue);\r\n          return 3;\r\n      }\r\n      // one line segment includes the other one\r\n      divideSegment(events[0], events[1].point, queue);\r\n      divideSegment(events[3].otherEvent, events[2].point, queue);\r\n      return 3;\r\n  }\r\n  //# sourceMappingURL=possible_intersection.js.map\n\n  function compareSegments(le1, le2) {\r\n      if (le1 === le2)\r\n          return 0;\r\n      // Segments are not collinear\r\n      if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\r\n          signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\r\n          // If they share their left endpoint use the right endpoint to sort\r\n          if (equals(le1.point, le2.point))\r\n              return isBelow(le1, le2.otherEvent.point) ? -1 : 1;\r\n          // Different left endpoint: use the left endpoint to sort\r\n          if (le1.point[0] === le2.point[0])\r\n              return le1.point[1] < le2.point[1] ? -1 : 1;\r\n          // has the line segment associated to e1 been inserted\r\n          // into S after the line segment associated to e2 ?\r\n          if (compareEvents(le1, le2) === 1)\r\n              return isBelow(le2, le1.point) ? 1 : -1;\r\n          // The line segment associated to e2 has been inserted\r\n          // into S after the line segment associated to e1\r\n          return isBelow(le1, le2.point) ? -1 : 1;\r\n      }\r\n      if (le1.isSubject === le2.isSubject) { // same polygon\r\n          var p1 = le1.point, p2 = le2.point;\r\n          if (p1[0] === p2[0] && p1[1] === p2[1] /*equals(le1.point, le2.point)*/) {\r\n              p1 = le1.otherEvent.point;\r\n              p2 = le2.otherEvent.point;\r\n              if (p1[0] === p2[0] && p1[1] === p2[1])\r\n                  return 0;\r\n              else\r\n                  return le1.contourId > le2.contourId ? 1 : -1;\r\n          }\r\n      }\r\n      else { // Segments are collinear, but belong to separate polygons\r\n          return le1.isSubject ? -1 : 1;\r\n      }\r\n      return compareEvents(le1, le2) === 1 ? 1 : -1;\r\n  }\r\n  //# sourceMappingURL=compare_segments.js.map\n\n  function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\r\n      var sweepLine = new Tree(compareSegments);\r\n      var sortedEvents = [];\r\n      var rightbound = Math.min(sbbox[2], cbbox[2]);\r\n      var prev, next, begin;\r\n      while (eventQueue.length !== 0) {\r\n          var event_1 = eventQueue.pop();\r\n          sortedEvents.push(event_1);\r\n          // optimization by bboxes for intersection and difference goes here\r\n          if ((operation === INTERSECTION && event_1.point[0] > rightbound) ||\r\n              (operation === DIFFERENCE && event_1.point[0] > sbbox[2])) {\r\n              break;\r\n          }\r\n          if (event_1.left) {\r\n              next = prev = sweepLine.insert(event_1);\r\n              begin = sweepLine.minNode();\r\n              if (prev !== begin)\r\n                  prev = sweepLine.prev(prev);\r\n              else\r\n                  prev = null;\r\n              next = sweepLine.next(next);\r\n              var prevEvent = prev ? prev.key : null;\r\n              var prevprevEvent = void 0;\r\n              computeFields(event_1, prevEvent, operation);\r\n              if (next) {\r\n                  if (possibleIntersection(event_1, next.key, eventQueue) === 2) {\r\n                      computeFields(event_1, prevEvent, operation);\r\n                      computeFields(event_1, next.key, operation);\r\n                  }\r\n              }\r\n              if (prev) {\r\n                  if (possibleIntersection(prev.key, event_1, eventQueue) === 2) {\r\n                      var prevprev = prev;\r\n                      if (prevprev !== begin)\r\n                          prevprev = sweepLine.prev(prevprev);\r\n                      else\r\n                          prevprev = null;\r\n                      prevprevEvent = prevprev ? prevprev.key : null;\r\n                      computeFields(prevEvent, prevprevEvent, operation);\r\n                      computeFields(event_1, prevEvent, operation);\r\n                  }\r\n              }\r\n          }\r\n          else {\r\n              event_1 = event_1.otherEvent;\r\n              next = prev = sweepLine.find(event_1);\r\n              if (prev && next) {\r\n                  if (prev !== begin)\r\n                      prev = sweepLine.prev(prev);\r\n                  else\r\n                      prev = null;\r\n                  next = sweepLine.next(next);\r\n                  sweepLine.remove(event_1);\r\n                  if (next && prev) {\r\n                      possibleIntersection(prev.key, next.key, eventQueue);\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      return sortedEvents;\r\n  }\r\n  //# sourceMappingURL=subdivide_segments.js.map\n\n  function orderEvents(sortedEvents) {\r\n      var event, i, len, tmp;\r\n      var resultEvents = [];\r\n      for (i = 0, len = sortedEvents.length; i < len; i++) {\r\n          event = sortedEvents[i];\r\n          if ((event.left && event.inResult) ||\r\n              (!event.left && event.otherEvent.inResult)) {\r\n              resultEvents.push(event);\r\n          }\r\n      }\r\n      // Due to overlapping edges the resultEvents array can be not wholly sorted\r\n      var sorted = false;\r\n      while (!sorted) {\r\n          sorted = true;\r\n          for (i = 0, len = resultEvents.length; i < len; i++) {\r\n              if ((i + 1) < len &&\r\n                  compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\r\n                  tmp = resultEvents[i];\r\n                  resultEvents[i] = resultEvents[i + 1];\r\n                  resultEvents[i + 1] = tmp;\r\n                  sorted = false;\r\n              }\r\n          }\r\n      }\r\n      for (i = 0, len = resultEvents.length; i < len; i++) {\r\n          event = resultEvents[i];\r\n          event.pos = i;\r\n      }\r\n      // imagine, the right event is found in the beginning of the queue,\r\n      // when his left counterpart is not marked yet\r\n      for (i = 0, len = resultEvents.length; i < len; i++) {\r\n          event = resultEvents[i];\r\n          if (!event.left) {\r\n              tmp = event.pos;\r\n              event.pos = event.otherEvent.pos;\r\n              event.otherEvent.pos = tmp;\r\n          }\r\n      }\r\n      return resultEvents;\r\n  }\r\n  function nextPos(pos, resultEvents, processed, origIndex) {\r\n      console.log(resultEvents);\r\n      var p, p1;\r\n      var newPos = pos + 1;\r\n      var length = resultEvents.length;\r\n      p = resultEvents[pos].point;\r\n      if (newPos < length)\r\n          p1 = resultEvents[newPos].point;\r\n      // while in range and not the current one by value\r\n      while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\r\n          if (!processed[newPos]) {\r\n              return newPos;\r\n          }\r\n          else {\r\n              newPos++;\r\n          }\r\n          try {\r\n              p1 = resultEvents[newPos].point;\r\n          }\r\n          catch (e) {\r\n              console.log(e, newPos, resultEvents.length);\r\n          }\r\n      }\r\n      newPos = pos - 1;\r\n      while (processed[newPos] && newPos >= origIndex) {\r\n          newPos--;\r\n      }\r\n      return newPos;\r\n  }\r\n  function connectEdges(sortedEvents, operation) {\r\n      var i, len;\r\n      var resultEvents = orderEvents(sortedEvents);\r\n      // \"false\"-filled array\r\n      var processed = {};\r\n      var result = [];\r\n      var event;\r\n      for (i = 0, len = resultEvents.length; i < len; i++) {\r\n          if (processed[i])\r\n              continue;\r\n          var contour = [[]];\r\n          if (!resultEvents[i].isExteriorRing) {\r\n              if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\r\n                  result.push(contour);\r\n              }\r\n              else if (result.length === 0) {\r\n                  result.push([[]]);\r\n              }\r\n              else {\r\n                  result[result.length - 1].push(contour[0]);\r\n              }\r\n          }\r\n          else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\r\n              result[result.length - 1].push(contour[0]);\r\n          }\r\n          else {\r\n              result.push(contour);\r\n          }\r\n          var ringId = result.length - 1;\r\n          var pos = i;\r\n          var initial = resultEvents[i].point;\r\n          contour[0].push(initial);\r\n          while (pos >= i) {\r\n              event = resultEvents[pos];\r\n              processed[pos] = true;\r\n              if (event.left) {\r\n                  event.resultInOut = false;\r\n                  event.contourId = ringId;\r\n              }\r\n              else {\r\n                  event.otherEvent.resultInOut = true;\r\n                  event.otherEvent.contourId = ringId;\r\n              }\r\n              pos = event.pos;\r\n              processed[pos] = true;\r\n              contour[0].push(resultEvents[pos].point);\r\n              pos = nextPos(pos, resultEvents, processed, i);\r\n          }\r\n          pos = pos === -1 ? i : pos;\r\n          event = resultEvents[pos];\r\n          processed[pos] = processed[event.pos] = true;\r\n          event.otherEvent.resultInOut = true;\r\n          event.otherEvent.contourId = ringId;\r\n      }\r\n      // Handle if the result is a polygon (eg not multipoly)\r\n      // Commented it again, let's see what do we mean by that\r\n      // if (result.length === 1) result = result[0];\r\n      return result;\r\n  }\n\n  function trivialOperation(subject, clipping, operation) {\r\n      var result = null;\r\n      if (subject.length * clipping.length === 0) {\r\n          if (operation === INTERSECTION) {\r\n              result = EMPTY;\r\n          }\r\n          else if (operation === DIFFERENCE) {\r\n              result = subject;\r\n          }\r\n          else if (operation === UNION ||\r\n              operation === XOR) {\r\n              result = (subject.length === 0) ? clipping : subject;\r\n          }\r\n      }\r\n      return result;\r\n  }\r\n  function compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\r\n      var result = null;\r\n      // they are far apart\r\n      if (sbbox[0] > cbbox[2] ||\r\n          cbbox[0] > sbbox[2] ||\r\n          sbbox[1] > cbbox[3] ||\r\n          cbbox[1] > sbbox[3]) {\r\n          if (operation === INTERSECTION) { // no intersection possible\r\n              result = EMPTY;\r\n          }\r\n          else if (operation === DIFFERENCE) { // take the subject\r\n              result = subject;\r\n          }\r\n          else if (operation === UNION ||\r\n              operation === XOR) { // take both\r\n              result = subject.concat(clipping);\r\n          }\r\n      }\r\n      return result;\r\n  }\r\n  function boolean (subject, clipping, operation) {\r\n      // 0. trivial cases\r\n      var trivial = trivialOperation(subject, clipping, operation);\r\n      if (trivial) {\r\n          return trivial === EMPTY ? null : trivial;\r\n      }\r\n      var sbbox = [Infinity, Infinity, -Infinity, -Infinity];\r\n      var cbbox = [Infinity, Infinity, -Infinity, -Infinity];\r\n      var eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\r\n      trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\r\n      if (trivial) {\r\n          return trivial === EMPTY ? null : trivial;\r\n      }\r\n      // 1. subdivide\r\n      //console.time('subdivide edges');\r\n      var sortedEvents = subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation);\r\n      //console.timeEnd('subdivide edges');\r\n      //console.time('connect vertices');\r\n      var result = connectEdges(sortedEvents, operation);\r\n      //console.timeEnd('connect vertices');\r\n      // 2. mark\r\n      // 3. connect\r\n      return result;\r\n  }\n\n  function union(subject, clipping) {\r\n      return boolean(subject, clipping, UNION);\r\n  }\r\n  function diff(subject, clipping) {\r\n      return boolean(subject, clipping, DIFFERENCE);\r\n  }\r\n  function xor(subject, clipping) {\r\n      return boolean(subject, clipping, XOR);\r\n  }\r\n  function intersection$1(subject, clipping) {\r\n      return boolean(subject, clipping, INTERSECTION);\r\n  }\r\n  var operations = { UNION: UNION, DIFFERENCE: DIFFERENCE, INTERSECTION: INTERSECTION, XOR: XOR };\r\n  //# sourceMappingURL=index.js.map\n\n  exports.diff = diff;\n  exports.intersection = intersection$1;\n  exports.operations = operations;\n  exports.union = union;\n  exports.xor = xor;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=martinez.umd.js.map\n","import './coordinates';\nimport './polygoncontrol';\nimport './booleanopcontrol';\nimport martinez from '../../dist/martinez.umd';\n\nlet mode = window.location.hash.substring(1);\nlet path = '../test/fixtures/';\nconst ext  = '.geojson';\nlet file;\n\nlet files = [\n  'asia', 'trapezoid-box', 'canada', 'horseshoe', 'hourglasses', 'overlap_y',\n  'polygon_trapezoid_edge_overlap', 'touching_boxes', 'two_pointed_triangles',\n  'hole_cut', 'overlapping_segments', 'overlap_loop', 'disjoint_boxes'\n];\n\nswitch (mode) {\n  case 'geo':\n    file = 'asia.geojson';\n    break;\n  case 'states':\n    file = 'states_source.geojson';\n    break;\n  case 'trapezoid':\n    file = 'trapezoid-box.geojson';\n    break;\n  case 'canada':\n    file = 'canada.geojson';\n    break;\n  case 'horseshoe':\n    file = 'horseshoe.geojson';\n    break;\n  case 'hourglasses':\n    file = 'hourglasses.geojson';\n    break;\n  case 'edge_overlap':\n    file = 'polygon_trapezoid_edge_overlap.geojson';\n    break;\n  case 'touching_boxes':\n    file = 'touching_boxes.geojson';\n    break;\n  case 'triangles':\n    file = 'two_pointed_triangles.geojson';\n    break;\n  case 'holecut':\n    file = 'hole_cut.geojson';\n    break;\n  case 'overlapping_segments':\n    file = 'overlapping_segments.geojson';\n    break;\n  case 'overlap_loop':\n    file = 'overlap_loop.geojson';\n    break;\n  case 'overlap_y':\n    file = 'overlap_y.geojson';\n    break;\n  case 'overlap_two':\n    file = 'overlap_two.geojson';\n    break;\n  case 'disjoint_boxes':\n    file = 'disjoint_boxes.geojson';\n    break;\n  case 'polygons_edge_overlap':\n    file = 'polygons_edge_overlap.geojson';\n    break;\n  case 'vertical_boxes':\n    file = 'vertical_boxes.geojson';\n    break;\n  case 'collapsed':\n    file = 'collapsed.geojson';\n    break;\n  case 'fatal1':\n    file = 'fatal1.geojson';\n    break;\n  case 'fatal2':\n    file = 'fatal2.geojson';\n    break;\n  case 'fatal3':\n    file = 'fatal3.geojson';\n    break;\n  case 'fatal4':\n    file = 'fatal4.geojson';\n    break;\n  case 'rectangles':\n    file = 'rectangles.geojson';\n    break;\n  default:\n    file = 'hole_hole.geojson';\n    break;\n}\n\nconsole.log(mode);\n\n\nvar OPERATIONS = {\n  INTERSECTION: 0,\n  UNION:        1,\n  DIFFERENCE:   2,\n  XOR:          3\n};\n\nvar div = document.createElement('div');\ndiv.id = 'image-map';\ndiv.style.width = div.style.height = '100%';\ndocument.body.appendChild(div);\n\n// create the slippy map\nvar map = window.map = L.map('image-map', {\n  minZoom: 1,\n  maxZoom: 20,\n  center: [0, 0],\n  zoom: 2,\n  crs: mode === 'geo' ? L.CRS.EPSG4326 : L.extend({}, L.CRS.Simple, {\n    transformation: new L.Transformation(1/8, 0, -1/8, 0)\n  }),\n  editable: true\n});\n\nmap.addControl(new L.NewPolygonControl({\n  callback: map.editTools.startPolygon\n}));\nmap.addControl(new L.Coordinates());\nmap.addControl(new L.BooleanControl({\n  callback: run,\n  clear: clear\n}));\n\nvar drawnItems = window.drawnItems = L.geoJson().addTo(map);\n\nfunction loadData(path) {\n  console.log(path);\n  fetch(path)\n    .then((r) => r.json())\n    .then((json) => {\n        drawnItems.addData(json);\n        map.fitBounds(drawnItems.getBounds().pad(0.05), { animate: false });\n    });\n}\n\nfunction clear() {\n  drawnItems.clearLayers();\n  results.clearLayers();\n}\n\nvar reader = new jsts.io.GeoJSONReader();\nvar writer = new jsts.io.GeoJSONWriter();\n\nfunction run (op) {\n  var layers = drawnItems.getLayers();\n  if (layers.length < 2) return;\n  var subject = layers[0].toGeoJSON();\n  var clipping = layers[1].toGeoJSON();\n\n  //console.log('input', subject, clipping, op);\n\n  subject  = JSON.parse(JSON.stringify(subject));\n  clipping = JSON.parse(JSON.stringify(clipping));\n\n  var operation;\n  if (op === OPERATIONS.INTERSECTION) {\n    operation = martinez.intersection;\n  } else if (op === OPERATIONS.UNION) {\n    operation = martinez.union;\n  } else if (op === OPERATIONS.DIFFERENCE) {\n    operation = martinez.diff;\n  } else if (op === 5) { // B - A\n    operation = martinez.diff;\n\n    var temp = subject;\n    subject  = clipping;\n    clipping = temp;\n  } else {\n    operation = martinez.xor;\n  }\n\n  console.time('martinez');\n  var result = operation(subject.geometry.coordinates, clipping.geometry.coordinates);\n  console.timeEnd('martinez');\n\n  //if (op === OPERATIONS.UNION) result = result[0];\n  console.log('result', result);\n  // console.log(JSON.stringify(result))\n  results.clearLayers();\n\n  if (result !== null) {\n    results.addData({\n      'type': 'Feature',\n      'geometry': {\n        'type': 'MultiPolygon',\n        'coordinates': result\n      }\n    });\n\n    setTimeout(function() {\n      console.time('jsts');\n      var s = reader.read(subject);\n      var c = reader.read(clipping);\n      var res;\n      if (op === OPERATIONS.INTERSECTION) {\n        res = s.geometry.intersection(c.geometry);\n      } else if (op === OPERATIONS.UNION) {\n        res = s.geometry.union(c.geometry);\n      } else if (op === OPERATIONS.DIFFERENCE) {\n        res = s.geometry.difference(c.geometry);\n      } else {\n        res = s.geometry.symDifference(c.geometry);\n      }\n      res = writer.write(res);\n      console.timeEnd('jsts');\n      console.log(res);\n    }, 500);\n  }\n}\n\n//drawnItems.addData(oneInside);\n//drawnItems.addData(twoPointedTriangles);\n//drawnItems.addData(selfIntersecting);\n//drawnItems.addData(holes);\n//drawnItems.addData(data);\n\nmap.on('editable:created', function(evt) {\n  drawnItems.addLayer(evt.layer);\n  evt.layer.on('click', function(e) {\n    if ((e.originalEvent.ctrlKey || e.originalEvent.metaKey) && this.editEnabled()) {\n      this.editor.newHole(e.latlng);\n    }\n  });\n});\n\nvar results = window.results = L.geoJson(null, {\n  style: function(feature) {\n    return {\n      color: 'red',\n      weight: 1\n    };\n  }\n}).addTo(map);\n\nloadData(path + file);\n"],"names":["L","this"],"mappings":"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"}