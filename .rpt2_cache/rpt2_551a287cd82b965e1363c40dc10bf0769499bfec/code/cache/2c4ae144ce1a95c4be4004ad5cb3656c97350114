{"code":"import SweepEvent from './sweep_event';\r\nimport equals from './equals';\r\nimport compareEvents from './compare_events';\r\n/**\r\n * @param  {SweepEvent} se\r\n * @param  {Array.<Number>} p\r\n * @param  {Queue} queue\r\n * @return {Queue}\r\n */\r\nexport default function divideSegment(se, p, queue) {\r\n    const r = new SweepEvent(p, false, se, se.isSubject);\r\n    const l = new SweepEvent(p, true, se.otherEvent, se.isSubject);\r\n    /* eslint-disable no-console */\r\n    if (equals(se.point, se.otherEvent.point)) {\r\n        console.warn('what is that, a collapsed segment?', se);\r\n    }\r\n    /* eslint-enable no-console */\r\n    r.contourId = l.contourId = se.contourId;\r\n    // avoid a rounding error. The left event would be processed after the right event\r\n    if (compareEvents(l, se.otherEvent) > 0) {\r\n        se.otherEvent.left = true;\r\n        l.left = false;\r\n    }\r\n    // avoid a rounding error. The left event would be processed after the right event\r\n    // if (compareEvents(se, r) > 0) {}\r\n    se.otherEvent.otherEvent = l;\r\n    se.otherEvent = r;\r\n    queue.push(l);\r\n    queue.push(r);\r\n    return queue;\r\n}\r\n"}
