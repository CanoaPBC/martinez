{"code":"import signedArea from './signed_area';\r\nexport default function compareEvents(e1, e2) {\r\n    const p1 = e1.point;\r\n    const p2 = e2.point;\r\n    // Different x-coordinate\r\n    if (p1[0] > p2[0])\r\n        return 1;\r\n    if (p1[0] < p2[0])\r\n        return -1;\r\n    // Different points, but same x-coordinate\r\n    // Event with lower y-coordinate is processed first\r\n    if (p1[1] !== p2[1])\r\n        return p1[1] > p2[1] ? 1 : -1;\r\n    return specialCases(e1, e2, p1, p2);\r\n}\r\n/* eslint-disable no-unused-vars */\r\nfunction specialCases(e1, e2, p1, p2) {\r\n    // Same coordinates, but one is a left endpoint and the other is\r\n    // a right endpoint. The right endpoint is processed first\r\n    if (e1.left !== e2.left)\r\n        return e1.left ? 1 : -1;\r\n    // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\r\n    // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\r\n    // Same coordinates, both events\r\n    // are left endpoints or right endpoints.\r\n    // not collinear\r\n    if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\r\n        // the event associate to the bottom segment is processed first\r\n        return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\r\n    }\r\n    return (!e1.isSubject && e2.isSubject) ? 1 : -1;\r\n}\r\n/* eslint-enable no-unused-vars */\r\n"}
