{"code":"import { NORMAL } from './edge_type';\r\n/**\r\n * Sweepline event\r\n */\r\nvar SweepEvent = /** @class */ (function () {\r\n    function SweepEvent(point, left, otherEvent, isSubject, edgeType) {\r\n        if (edgeType === void 0) { edgeType = NORMAL; }\r\n        this.left = left;\r\n        this.point = point;\r\n        this.otherEvent = otherEvent;\r\n        this.isSubject = isSubject;\r\n        this.type = edgeType;\r\n        this.inOut = false;\r\n        this.otherInOut = false;\r\n        this.prevInResult = null;\r\n        this.inResult = false;\r\n        // connection step\r\n        this.resultInOut = false;\r\n        this.isExteriorRing = true;\r\n    }\r\n    /**\r\n     * @param  {Array.<Number>}  p\r\n     * @return {Boolean}\r\n     */\r\n    SweepEvent.prototype.isBelow = function (p) {\r\n        var p0 = this.point, p1 = this.otherEvent.point;\r\n        return this.left\r\n            ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\r\n            // signedArea(this.point, this.otherEvent.point, p) > 0 :\r\n            : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\r\n        //signedArea(this.otherEvent.point, this.point, p) > 0;\r\n    };\r\n    /**\r\n     * @param  {Array.<Number>}  p\r\n     * @return {Boolean}\r\n     */\r\n    SweepEvent.prototype.isAbove = function (p) {\r\n        return !this.isBelow(p);\r\n    };\r\n    /**\r\n     * @return {Boolean}\r\n     */\r\n    SweepEvent.prototype.isVertical = function () {\r\n        return this.point[0] === this.otherEvent.point[0];\r\n    };\r\n    SweepEvent.prototype.clone = function () {\r\n        var copy = new SweepEvent(this.point, this.left, this.otherEvent, this.isSubject, this.type);\r\n        copy.inResult = this.inResult;\r\n        copy.prevInResult = this.prevInResult;\r\n        copy.isExteriorRing = this.isExteriorRing;\r\n        copy.inOut = this.inOut;\r\n        copy.otherInOut = this.otherInOut;\r\n        return copy;\r\n    };\r\n    return SweepEvent;\r\n}());\r\nexport default SweepEvent;\r\n"}
