{"code":"import subdivideSegments from './subdivide_segments';\r\nimport connectEdges from './connect_edges';\r\nimport fillQueue from './fill_queue';\r\nimport { INTERSECTION, DIFFERENCE, UNION, XOR } from './operation';\r\nconst EMPTY = [];\r\nfunction trivialOperation(subject, clipping, operation) {\r\n    let result = null;\r\n    if (subject.length * clipping.length === 0) {\r\n        if (operation === INTERSECTION) {\r\n            result = EMPTY;\r\n        }\r\n        else if (operation === DIFFERENCE) {\r\n            result = subject;\r\n        }\r\n        else if (operation === UNION ||\r\n            operation === XOR) {\r\n            result = (subject.length === 0) ? clipping : subject;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\r\n    let result = null;\r\n    if (sbbox[0] > cbbox[2] ||\r\n        cbbox[0] > sbbox[2] ||\r\n        sbbox[1] > cbbox[3] ||\r\n        cbbox[1] > sbbox[3]) {\r\n        if (operation === INTERSECTION) {\r\n            result = EMPTY;\r\n        }\r\n        else if (operation === DIFFERENCE) {\r\n            result = subject;\r\n        }\r\n        else if (operation === UNION ||\r\n            operation === XOR) {\r\n            result = subject.concat(clipping);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport default function boolean(subjectGeometry, clippingGeometry, operation) {\r\n    if (typeof subjectGeometry[0][0][0] === 'number') {\r\n        subjectGeometry = [subjectGeometry];\r\n    }\r\n    if (typeof clippingGeometry[0][0][0] === 'number') {\r\n        clippingGeometry = [clippingGeometry];\r\n    }\r\n    const subject = subjectGeometry;\r\n    const clipping = clippingGeometry;\r\n    let trivial = trivialOperation(subject, clipping, operation);\r\n    if (trivial) {\r\n        return trivial === EMPTY ? null : trivial;\r\n    }\r\n    const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\r\n    const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\r\n    //console.time('fill queue');\r\n    const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\r\n    //console.timeEnd('fill queue');\r\n    trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\r\n    if (trivial) {\r\n        return trivial === EMPTY ? null : trivial;\r\n    }\r\n    //console.time('subdivide edges');\r\n    const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\r\n    //console.timeEnd('subdivide edges');\r\n    //console.time('connect vertices');\r\n    const result = connectEdges(sortedEvents, operation);\r\n    //console.timeEnd('connect vertices');\r\n    return result;\r\n}\r\n"}
